function cov_1dwxx4co1l(){var path="E:\\vs studio code\\devops\\test\\Group4-Project\\utils\\UserUtil.js";var hash="d6c643eea7ca41efcf7e105304fd0a460add7db5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\vs studio code\\devops\\test\\Group4-Project\\utils\\UserUtil.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:42}},"1":{start:{line:2,column:11},end:{line:2,column:33}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:4,column:19},end:{line:4,column:21}},"4":{start:{line:7,column:4},end:{line:10,column:52}},"5":{start:{line:8,column:21},end:{line:8,column:56}},"6":{start:{line:9,column:8},end:{line:9,column:32}},"7":{start:{line:10,column:20},end:{line:10,column:39}},"8":{start:{line:10,column:40},end:{line:10,column:50}},"9":{start:{line:14,column:4},end:{line:19,column:52}},"10":{start:{line:15,column:27},end:{line:15,column:51}},"11":{start:{line:16,column:8},end:{line:16,column:32}},"12":{start:{line:17,column:8},end:{line:17,column:73}},"13":{start:{line:18,column:8},end:{line:18,column:26}},"14":{start:{line:19,column:20},end:{line:19,column:39}},"15":{start:{line:19,column:40},end:{line:19,column:50}},"16":{start:{line:23,column:4},end:{line:43,column:5}},"17":{start:{line:24,column:27},end:{line:24,column:51}},"18":{start:{line:27,column:30},end:{line:27,column:114}},"19":{start:{line:27,column:69},end:{line:27,column:113}},"20":{start:{line:29,column:8},end:{line:35,column:9}},"21":{start:{line:31,column:12},end:{line:31,column:85}},"22":{start:{line:33,column:12},end:{line:33,column:44}},"23":{start:{line:34,column:12},end:{line:34,column:46}},"24":{start:{line:38,column:8},end:{line:38,column:73}},"25":{start:{line:39,column:8},end:{line:39,column:26}},"26":{start:{line:41,column:8},end:{line:41,column:27}},"27":{start:{line:42,column:8},end:{line:42,column:18}},"28":{start:{line:49,column:4},end:{line:82,column:5}},"29":{start:{line:50,column:22},end:{line:50,column:36}},"30":{start:{line:51,column:25},end:{line:51,column:42}},"31":{start:{line:52,column:8},end:{line:54,column:9}},"32":{start:{line:53,column:12},end:{line:53,column:73}},"33":{start:{line:56,column:30},end:{line:56,column:64}},"34":{start:{line:59,column:27},end:{line:59,column:75}},"35":{start:{line:59,column:54},end:{line:59,column:74}},"36":{start:{line:60,column:8},end:{line:63,column:9}},"37":{start:{line:62,column:12},end:{line:62,column:77}},"38":{start:{line:65,column:31},end:{line:65,column:70}},"39":{start:{line:68,column:24},end:{line:68,column:55}},"40":{start:{line:71,column:29},end:{line:71,column:73}},"41":{start:{line:76,column:8},end:{line:76,column:50}},"42":{start:{line:81,column:8},end:{line:81,column:64}},"43":{start:{line:86,column:4},end:{line:114,column:5}},"44":{start:{line:88,column:26},end:{line:88,column:40}},"45":{start:{line:89,column:29},end:{line:89,column:46}},"46":{start:{line:92,column:25},end:{line:92,column:59}},"47":{start:{line:93,column:31},end:{line:93,column:36}},"48":{start:{line:96,column:8},end:{line:104,column:9}},"49":{start:{line:96,column:21},end:{line:96,column:22}},"50":{start:{line:97,column:32},end:{line:97,column:43}},"51":{start:{line:100,column:12},end:{line:103,column:13}},"52":{start:{line:101,column:16},end:{line:101,column:40}},"53":{start:{line:102,column:16},end:{line:102,column:22}},"54":{start:{line:107,column:8},end:{line:111,column:9}},"55":{start:{line:108,column:12},end:{line:108,column:74}},"56":{start:{line:110,column:12},end:{line:110,column:77}},"57":{start:{line:113,column:8},end:{line:113,column:64}},"58":{start:{line:117,column:4},end:{line:147,column:5}},"59":{start:{line:119,column:29},end:{line:119,column:50}},"60":{start:{line:120,column:25},end:{line:120,column:42}},"61":{start:{line:123,column:27},end:{line:123,column:55}},"62":{start:{line:124,column:8},end:{line:126,column:9}},"63":{start:{line:125,column:12},end:{line:125,column:109}},"64":{start:{line:129,column:25},end:{line:129,column:59}},"65":{start:{line:132,column:29},end:{line:132,column:79}},"66":{start:{line:132,column:51},end:{line:132,column:78}},"67":{start:{line:135,column:8},end:{line:143,column:9}},"68":{start:{line:137,column:12},end:{line:137,column:78}},"69":{start:{line:139,column:12},end:{line:139,column:76}},"70":{start:{line:141,column:12},end:{line:141,column:44}},"71":{start:{line:142,column:12},end:{line:142,column:64}},"72":{start:{line:145,column:8},end:{line:145,column:51}},"73":{start:{line:146,column:8},end:{line:146,column:67}},"74":{start:{line:151,column:0},end:{line:153,column:2}}},fnMap:{"0":{name:"readJSON",decl:{start:{line:6,column:15},end:{line:6,column:23}},loc:{start:{line:6,column:34},end:{line:11,column:1}},line:6},"1":{name:"writeJSON",decl:{start:{line:13,column:15},end:{line:13,column:24}},loc:{start:{line:13,column:43},end:{line:20,column:1}},line:13},"2":{name:"writeUpdate",decl:{start:{line:22,column:15},end:{line:22,column:26}},loc:{start:{line:22,column:45},end:{line:44,column:1}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:51},end:{line:27,column:52}},loc:{start:{line:27,column:69},end:{line:27,column:113}},line:27},"4":{name:"register",decl:{start:{line:48,column:15},end:{line:48,column:23}},loc:{start:{line:48,column:34},end:{line:83,column:1}},line:48},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:46},end:{line:59,column:47}},loc:{start:{line:59,column:54},end:{line:59,column:74}},line:59},"6":{name:"login",decl:{start:{line:84,column:15},end:{line:84,column:20}},loc:{start:{line:84,column:31},end:{line:115,column:1}},line:84},"7":{name:"updateEmail",decl:{start:{line:116,column:15},end:{line:116,column:26}},loc:{start:{line:116,column:37},end:{line:148,column:1}},line:116},"8":{name:"(anonymous_8)",decl:{start:{line:132,column:43},end:{line:132,column:44}},loc:{start:{line:132,column:51},end:{line:132,column:78}},line:132}},branchMap:{"0":{loc:{start:{line:29,column:8},end:{line:35,column:9}},type:"if",locations:[{start:{line:29,column:8},end:{line:35,column:9}},{start:{line:29,column:8},end:{line:35,column:9}}],line:29},"1":{loc:{start:{line:31,column:46},end:{line:31,column:84}},type:"binary-expr",locations:[{start:{line:31,column:46},end:{line:31,column:61}},{start:{line:31,column:65},end:{line:31,column:84}}],line:31},"2":{loc:{start:{line:52,column:8},end:{line:54,column:9}},type:"if",locations:[{start:{line:52,column:8},end:{line:54,column:9}},{start:{line:52,column:8},end:{line:54,column:9}}],line:52},"3":{loc:{start:{line:52,column:12},end:{line:52,column:79}},type:"binary-expr",locations:[{start:{line:52,column:12},end:{line:52,column:32}},{start:{line:52,column:36},end:{line:52,column:56}},{start:{line:52,column:60},end:{line:52,column:79}}],line:52},"4":{loc:{start:{line:60,column:8},end:{line:63,column:9}},type:"if",locations:[{start:{line:60,column:8},end:{line:63,column:9}},{start:{line:60,column:8},end:{line:63,column:9}}],line:60},"5":{loc:{start:{line:100,column:12},end:{line:103,column:13}},type:"if",locations:[{start:{line:100,column:12},end:{line:103,column:13}},{start:{line:100,column:12},end:{line:103,column:13}}],line:100},"6":{loc:{start:{line:100,column:16},end:{line:100,column:88}},type:"binary-expr",locations:[{start:{line:100,column:16},end:{line:100,column:47}},{start:{line:100,column:51},end:{line:100,column:88}}],line:100},"7":{loc:{start:{line:107,column:8},end:{line:111,column:9}},type:"if",locations:[{start:{line:107,column:8},end:{line:111,column:9}},{start:{line:107,column:8},end:{line:111,column:9}}],line:107},"8":{loc:{start:{line:124,column:8},end:{line:126,column:9}},type:"if",locations:[{start:{line:124,column:8},end:{line:126,column:9}},{start:{line:124,column:8},end:{line:126,column:9}}],line:124},"9":{loc:{start:{line:124,column:12},end:{line:124,column:102}},type:"binary-expr",locations:[{start:{line:124,column:12},end:{line:124,column:25}},{start:{line:124,column:29},end:{line:124,column:38}},{start:{line:124,column:42},end:{line:124,column:72}},{start:{line:124,column:76},end:{line:124,column:102}}],line:124},"10":{loc:{start:{line:135,column:8},end:{line:143,column:9}},type:"if",locations:[{start:{line:135,column:8},end:{line:143,column:9}},{start:{line:135,column:8},end:{line:143,column:9}}],line:135}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d6c643eea7ca41efcf7e105304fd0a460add7db5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1dwxx4co1l=function(){return actualCoverage;};}return actualCoverage;}cov_1dwxx4co1l();const{User}=(cov_1dwxx4co1l().s[0]++,require('../models/User'));const fs=(cov_1dwxx4co1l().s[1]++,require('fs').promises);const bcrypt=(cov_1dwxx4co1l().s[2]++,require('bcrypt'));const saltRounds=(cov_1dwxx4co1l().s[3]++,10);// The number of salt rounds to use (higher is more secure but slower)
async function readJSON(filename){cov_1dwxx4co1l().f[0]++;cov_1dwxx4co1l().s[4]++;try{const data=(cov_1dwxx4co1l().s[5]++,await fs.readFile(filename,'utf8'));cov_1dwxx4co1l().s[6]++;return JSON.parse(data);}catch(err){cov_1dwxx4co1l().s[7]++;console.error(err);cov_1dwxx4co1l().s[8]++;throw err;}}async function writeJSON(object,filename){cov_1dwxx4co1l().f[1]++;cov_1dwxx4co1l().s[9]++;try{const allObjects=(cov_1dwxx4co1l().s[10]++,await readJSON(filename));cov_1dwxx4co1l().s[11]++;allObjects.push(object);cov_1dwxx4co1l().s[12]++;await fs.writeFile(filename,JSON.stringify(allObjects),'utf8');cov_1dwxx4co1l().s[13]++;return allObjects;}catch(err){cov_1dwxx4co1l().s[14]++;console.error(err);cov_1dwxx4co1l().s[15]++;throw err;}}async function writeUpdate(object,filename){cov_1dwxx4co1l().f[2]++;cov_1dwxx4co1l().s[16]++;try{const allObjects=(cov_1dwxx4co1l().s[17]++,await readJSON(filename));// Find the index of the object to update in the array
const indexToUpdate=(cov_1dwxx4co1l().s[18]++,allObjects.findIndex(existingObject=>{cov_1dwxx4co1l().f[3]++;cov_1dwxx4co1l().s[19]++;return existingObject.email===object.currentEmail;}));cov_1dwxx4co1l().s[20]++;if(indexToUpdate!==-1){cov_1dwxx4co1l().b[0][0]++;cov_1dwxx4co1l().s[21]++;// Update the existing object
allObjects[indexToUpdate].email=(cov_1dwxx4co1l().b[1][0]++,object.newEmail)||(cov_1dwxx4co1l().b[1][1]++,object.currentEmail);// Use newEmail if provided, otherwise use existing email
}else{cov_1dwxx4co1l().b[0][1]++;cov_1dwxx4co1l().s[22]++;console.error('User not found');cov_1dwxx4co1l().s[23]++;throw new Error('User not found');}// Write the updated data back to the JSON file
cov_1dwxx4co1l().s[24]++;await fs.writeFile(filename,JSON.stringify(allObjects),'utf8');cov_1dwxx4co1l().s[25]++;return allObjects;}catch(err){cov_1dwxx4co1l().s[26]++;console.error(err);cov_1dwxx4co1l().s[27]++;throw err;}}async function register(req,res){cov_1dwxx4co1l().f[4]++;cov_1dwxx4co1l().s[28]++;try{const email=(cov_1dwxx4co1l().s[29]++,req.body.email);const password=(cov_1dwxx4co1l().s[30]++,req.body.password);cov_1dwxx4co1l().s[31]++;if((cov_1dwxx4co1l().b[3][0]++,!email.includes('@'))||(cov_1dwxx4co1l().b[3][1]++,!email.includes('.'))||(cov_1dwxx4co1l().b[3][2]++,password.length<6)){cov_1dwxx4co1l().b[2][0]++;cov_1dwxx4co1l().s[32]++;return res.status(500).json({message:'Validation error'});}else{cov_1dwxx4co1l().b[2][1]++;}const existingUsers=(cov_1dwxx4co1l().s[33]++,await readJSON('utils/users.json'));// Check if the email already exists in the list of users
const userExists=(cov_1dwxx4co1l().s[34]++,existingUsers.some(user=>{cov_1dwxx4co1l().f[5]++;cov_1dwxx4co1l().s[35]++;return user.email===email;}));cov_1dwxx4co1l().s[36]++;if(userExists){cov_1dwxx4co1l().b[4][0]++;cov_1dwxx4co1l().s[37]++;return res.status(400).json({message:'Email already exists'});}else{cov_1dwxx4co1l().b[4][1]++;}const hashedPassword=(cov_1dwxx4co1l().s[38]++,await bcrypt.hash(password,saltRounds));// Store the hashed password in the User object
const newUser=(cov_1dwxx4co1l().s[39]++,new User(email,hashedPassword));// Write the newUser object with the hashed password to the JSON data store
const updatedUsers=(cov_1dwxx4co1l().s[40]++,await writeJSON(newUser,'utils/users.json'));// Log the updated users for debugging
//console.log('Updated Users:', updatedUsers);
cov_1dwxx4co1l().s[41]++;return res.status(201).json(updatedUsers);}catch(error){cov_1dwxx4co1l().s[42]++;// Log the error for debugging
// console.error('Error in register function:', error);
return res.status(500).json({message:error.message});}}async function login(req,res){cov_1dwxx4co1l().f[6]++;cov_1dwxx4co1l().s[43]++;try{//getting email and password
const userEmail=(cov_1dwxx4co1l().s[44]++,req.body.email);const userPassword=(cov_1dwxx4co1l().s[45]++,req.body.password);//reading of user data
const allUsers=(cov_1dwxx4co1l().s[46]++,await readJSON('utils/users.json'));let validCredentials=(cov_1dwxx4co1l().s[47]++,false);//for loop all users to check
cov_1dwxx4co1l().s[48]++;for(let i=(cov_1dwxx4co1l().s[49]++,0);i<allUsers.length;i++){const currentUser=(cov_1dwxx4co1l().s[50]++,allUsers[i]);//check if user and password match
cov_1dwxx4co1l().s[51]++;if((cov_1dwxx4co1l().b[6][0]++,currentUser.email===userEmail)&&(cov_1dwxx4co1l().b[6][1]++,currentUser.password===userPassword)){cov_1dwxx4co1l().b[5][0]++;cov_1dwxx4co1l().s[52]++;validCredentials=true;cov_1dwxx4co1l().s[53]++;break;}else{cov_1dwxx4co1l().b[5][1]++;}}//checking of results
cov_1dwxx4co1l().s[54]++;if(validCredentials){cov_1dwxx4co1l().b[7][0]++;cov_1dwxx4co1l().s[55]++;return res.status(200).json({message:'Login successful!'});}else{cov_1dwxx4co1l().b[7][1]++;cov_1dwxx4co1l().s[56]++;return res.status(500).json({message:'Invalid credentials!'});}}catch(error){cov_1dwxx4co1l().s[57]++;return res.status(500).json({message:error.message});}}async function updateEmail(req,res){cov_1dwxx4co1l().f[7]++;cov_1dwxx4co1l().s[58]++;try{//getting current and new email
const currentEmail=(cov_1dwxx4co1l().s[59]++,req.body.currentEmail);const newEmail=(cov_1dwxx4co1l().s[60]++,req.body.newEmail);//enchancing input validation
const emailRegex=(cov_1dwxx4co1l().s[61]++,/^[^\s@]+@[^\s@]+\.[^\s@]+$/);cov_1dwxx4co1l().s[62]++;if((cov_1dwxx4co1l().b[9][0]++,!currentEmail)||(cov_1dwxx4co1l().b[9][1]++,!newEmail)||(cov_1dwxx4co1l().b[9][2]++,!emailRegex.test(currentEmail))||(cov_1dwxx4co1l().b[9][3]++,!emailRegex.test(newEmail))){cov_1dwxx4co1l().b[8][0]++;cov_1dwxx4co1l().s[63]++;return res.status(400).json({message:'Invalid data: Missing fields or invalid email format'});}else{cov_1dwxx4co1l().b[8][1]++;}//reading all user 
const allUsers=(cov_1dwxx4co1l().s[64]++,await readJSON('utils/users.json'));//finding user's email
const userToUpdate=(cov_1dwxx4co1l().s[65]++,allUsers.find(user=>{cov_1dwxx4co1l().f[8]++;cov_1dwxx4co1l().s[66]++;return user.email===currentEmail;}));//checking if user exists
cov_1dwxx4co1l().s[67]++;if(userToUpdate){cov_1dwxx4co1l().b[10][0]++;cov_1dwxx4co1l().s[68]++;//updating of email
await writeUpdate({currentEmail,newEmail},'utils/users.json');cov_1dwxx4co1l().s[69]++;res.status(200).json({message:'Email updated successfully'});}else{cov_1dwxx4co1l().b[10][1]++;cov_1dwxx4co1l().s[70]++;console.error('User not found');cov_1dwxx4co1l().s[71]++;res.status(404).json({message:'User not found'});}}catch(error){cov_1dwxx4co1l().s[72]++;console.error('An error occurred:',error);cov_1dwxx4co1l().s[73]++;res.status(500).json({message:'Internal server error'});}}cov_1dwxx4co1l().s[74]++;module.exports={readJSON,writeJSON,register,login,updateEmail};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWR3eHg0Y28xbCIsImFjdHVhbENvdmVyYWdlIiwiVXNlciIsInMiLCJyZXF1aXJlIiwiZnMiLCJwcm9taXNlcyIsImJjcnlwdCIsInNhbHRSb3VuZHMiLCJyZWFkSlNPTiIsImZpbGVuYW1lIiwiZiIsImRhdGEiLCJyZWFkRmlsZSIsIkpTT04iLCJwYXJzZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsIndyaXRlSlNPTiIsIm9iamVjdCIsImFsbE9iamVjdHMiLCJwdXNoIiwid3JpdGVGaWxlIiwic3RyaW5naWZ5Iiwid3JpdGVVcGRhdGUiLCJpbmRleFRvVXBkYXRlIiwiZmluZEluZGV4IiwiZXhpc3RpbmdPYmplY3QiLCJlbWFpbCIsImN1cnJlbnRFbWFpbCIsImIiLCJuZXdFbWFpbCIsIkVycm9yIiwicmVnaXN0ZXIiLCJyZXEiLCJyZXMiLCJib2R5IiwicGFzc3dvcmQiLCJpbmNsdWRlcyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZXhpc3RpbmdVc2VycyIsInVzZXJFeGlzdHMiLCJzb21lIiwidXNlciIsImhhc2hlZFBhc3N3b3JkIiwiaGFzaCIsIm5ld1VzZXIiLCJ1cGRhdGVkVXNlcnMiLCJsb2dpbiIsInVzZXJFbWFpbCIsInVzZXJQYXNzd29yZCIsImFsbFVzZXJzIiwidmFsaWRDcmVkZW50aWFscyIsImkiLCJjdXJyZW50VXNlciIsInVwZGF0ZUVtYWlsIiwiZW1haWxSZWdleCIsInRlc3QiLCJ1c2VyVG9VcGRhdGUiLCJmaW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlVzZXJVdGlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVXNlciB9ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1VzZXInKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpLnByb21pc2VzO1xyXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKTtcclxuY29uc3Qgc2FsdFJvdW5kcyA9IDEwOyAvLyBUaGUgbnVtYmVyIG9mIHNhbHQgcm91bmRzIHRvIHVzZSAoaGlnaGVyIGlzIG1vcmUgc2VjdXJlIGJ1dCBzbG93ZXIpXHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWFkSlNPTihmaWxlbmFtZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZnMucmVhZEZpbGUoZmlsZW5hbWUsICd1dGY4Jyk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHsgY29uc29sZS5lcnJvcihlcnIpOyB0aHJvdyBlcnI7IH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gd3JpdGVKU09OKG9iamVjdCwgZmlsZW5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgYWxsT2JqZWN0cyA9IGF3YWl0IHJlYWRKU09OKGZpbGVuYW1lKTtcclxuICAgICAgICBhbGxPYmplY3RzLnB1c2gob2JqZWN0KTtcclxuICAgICAgICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZW5hbWUsIEpTT04uc3RyaW5naWZ5KGFsbE9iamVjdHMpLCAndXRmOCcpO1xyXG4gICAgICAgIHJldHVybiBhbGxPYmplY3RzO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7IGNvbnNvbGUuZXJyb3IoZXJyKTsgdGhyb3cgZXJyOyB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHdyaXRlVXBkYXRlKG9iamVjdCwgZmlsZW5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgYWxsT2JqZWN0cyA9IGF3YWl0IHJlYWRKU09OKGZpbGVuYW1lKTtcclxuXHJcbiAgICAgICAgLy8gRmluZCB0aGUgaW5kZXggb2YgdGhlIG9iamVjdCB0byB1cGRhdGUgaW4gdGhlIGFycmF5XHJcbiAgICAgICAgY29uc3QgaW5kZXhUb1VwZGF0ZSA9IGFsbE9iamVjdHMuZmluZEluZGV4KGV4aXN0aW5nT2JqZWN0ID0+IGV4aXN0aW5nT2JqZWN0LmVtYWlsID09PSBvYmplY3QuY3VycmVudEVtYWlsKTtcclxuXHJcbiAgICAgICAgaWYgKGluZGV4VG9VcGRhdGUgIT09IC0xKSB7XHJcbiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgZXhpc3Rpbmcgb2JqZWN0XHJcbiAgICAgICAgICAgIGFsbE9iamVjdHNbaW5kZXhUb1VwZGF0ZV0uZW1haWwgPSBvYmplY3QubmV3RW1haWwgfHwgb2JqZWN0LmN1cnJlbnRFbWFpbDsgLy8gVXNlIG5ld0VtYWlsIGlmIHByb3ZpZGVkLCBvdGhlcndpc2UgdXNlIGV4aXN0aW5nIGVtYWlsXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignVXNlciBub3QgZm91bmQnKTtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIG5vdCBmb3VuZCcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gV3JpdGUgdGhlIHVwZGF0ZWQgZGF0YSBiYWNrIHRvIHRoZSBKU09OIGZpbGVcclxuICAgICAgICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZW5hbWUsIEpTT04uc3RyaW5naWZ5KGFsbE9iamVjdHMpLCAndXRmOCcpO1xyXG4gICAgICAgIHJldHVybiBhbGxPYmplY3RzO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgIHRocm93IGVycjtcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWdpc3RlcihyZXEsIHJlcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBlbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkID0gcmVxLmJvZHkucGFzc3dvcmQ7XHJcbiAgICAgICAgaWYgKCFlbWFpbC5pbmNsdWRlcygnQCcpIHx8ICFlbWFpbC5pbmNsdWRlcygnLicpIHx8IHBhc3N3b3JkLmxlbmd0aCA8IDYpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ1ZhbGlkYXRpb24gZXJyb3InIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VycyA9IGF3YWl0IHJlYWRKU09OKCd1dGlscy91c2Vycy5qc29uJyk7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBlbWFpbCBhbHJlYWR5IGV4aXN0cyBpbiB0aGUgbGlzdCBvZiB1c2Vyc1xyXG4gICAgICAgIGNvbnN0IHVzZXJFeGlzdHMgPSBleGlzdGluZ1VzZXJzLnNvbWUodXNlciA9PiB1c2VyLmVtYWlsID09PSBlbWFpbCk7XHJcbiAgICAgICAgaWYgKHVzZXJFeGlzdHMpIHtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdFbWFpbCBhbHJlYWR5IGV4aXN0cycgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBzYWx0Um91bmRzKTtcclxuXHJcbiAgICAgICAgLy8gU3RvcmUgdGhlIGhhc2hlZCBwYXNzd29yZCBpbiB0aGUgVXNlciBvYmplY3RcclxuICAgICAgICBjb25zdCBuZXdVc2VyID0gbmV3IFVzZXIoZW1haWwsIGhhc2hlZFBhc3N3b3JkKTtcclxuXHJcbiAgICAgICAgLy8gV3JpdGUgdGhlIG5ld1VzZXIgb2JqZWN0IHdpdGggdGhlIGhhc2hlZCBwYXNzd29yZCB0byB0aGUgSlNPTiBkYXRhIHN0b3JlXHJcbiAgICAgICAgY29uc3QgdXBkYXRlZFVzZXJzID0gYXdhaXQgd3JpdGVKU09OKG5ld1VzZXIsICd1dGlscy91c2Vycy5qc29uJyk7XHJcblxyXG4gICAgICAgIC8vIExvZyB0aGUgdXBkYXRlZCB1c2VycyBmb3IgZGVidWdnaW5nXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZygnVXBkYXRlZCBVc2VyczonLCB1cGRhdGVkVXNlcnMpO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24odXBkYXRlZFVzZXJzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgLy8gTG9nIHRoZSBlcnJvciBmb3IgZGVidWdnaW5nXHJcbiAgICAgICAgLy8gY29uc29sZS5lcnJvcignRXJyb3IgaW4gcmVnaXN0ZXIgZnVuY3Rpb246JywgZXJyb3IpO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGxvZ2luKHJlcSwgcmVzKSB7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgICAgLy9nZXR0aW5nIGVtYWlsIGFuZCBwYXNzd29yZFxyXG4gICAgICAgIGNvbnN0IHVzZXJFbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gICAgICAgIGNvbnN0IHVzZXJQYXNzd29yZCA9IHJlcS5ib2R5LnBhc3N3b3JkO1xyXG5cclxuICAgICAgICAvL3JlYWRpbmcgb2YgdXNlciBkYXRhXHJcbiAgICAgICAgY29uc3QgYWxsVXNlcnMgPSBhd2FpdCByZWFkSlNPTigndXRpbHMvdXNlcnMuanNvbicpO1xyXG4gICAgICAgIGxldCB2YWxpZENyZWRlbnRpYWxzID0gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vZm9yIGxvb3AgYWxsIHVzZXJzIHRvIGNoZWNrXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxVc2Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VXNlciA9IGFsbFVzZXJzW2ldO1xyXG5cclxuICAgICAgICAgICAgLy9jaGVjayBpZiB1c2VyIGFuZCBwYXNzd29yZCBtYXRjaFxyXG4gICAgICAgICAgICBpZiAoY3VycmVudFVzZXIuZW1haWwgPT09IHVzZXJFbWFpbCAmJiBjdXJyZW50VXNlci5wYXNzd29yZCA9PT0gdXNlclBhc3N3b3JkKSB7XHJcbiAgICAgICAgICAgICAgICB2YWxpZENyZWRlbnRpYWxzID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL2NoZWNraW5nIG9mIHJlc3VsdHNcclxuICAgICAgICBpZiAodmFsaWRDcmVkZW50aWFscykge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCEnIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6ICdJbnZhbGlkIGNyZWRlbnRpYWxzIScgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUVtYWlsKHJlcSwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vZ2V0dGluZyBjdXJyZW50IGFuZCBuZXcgZW1haWxcclxuICAgICAgICBjb25zdCBjdXJyZW50RW1haWwgPSByZXEuYm9keS5jdXJyZW50RW1haWw7XHJcbiAgICAgICAgY29uc3QgbmV3RW1haWwgPSByZXEuYm9keS5uZXdFbWFpbDtcclxuXHJcbiAgICAgICAgLy9lbmNoYW5jaW5nIGlucHV0IHZhbGlkYXRpb25cclxuICAgICAgICBjb25zdCBlbWFpbFJlZ2V4ID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC87XHJcbiAgICAgICAgaWYgKCFjdXJyZW50RW1haWwgfHwgIW5ld0VtYWlsIHx8ICFlbWFpbFJlZ2V4LnRlc3QoY3VycmVudEVtYWlsKSB8fCAhZW1haWxSZWdleC50ZXN0KG5ld0VtYWlsKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnSW52YWxpZCBkYXRhOiBNaXNzaW5nIGZpZWxkcyBvciBpbnZhbGlkIGVtYWlsIGZvcm1hdCcgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL3JlYWRpbmcgYWxsIHVzZXIgXHJcbiAgICAgICAgY29uc3QgYWxsVXNlcnMgPSBhd2FpdCByZWFkSlNPTigndXRpbHMvdXNlcnMuanNvbicpO1xyXG5cclxuICAgICAgICAvL2ZpbmRpbmcgdXNlcidzIGVtYWlsXHJcbiAgICAgICAgY29uc3QgdXNlclRvVXBkYXRlID0gYWxsVXNlcnMuZmluZCh1c2VyID0+IHVzZXIuZW1haWwgPT09IGN1cnJlbnRFbWFpbCk7XHJcblxyXG4gICAgICAgIC8vY2hlY2tpbmcgaWYgdXNlciBleGlzdHNcclxuICAgICAgICBpZiAodXNlclRvVXBkYXRlKSB7XHJcbiAgICAgICAgICAgIC8vdXBkYXRpbmcgb2YgZW1haWxcclxuICAgICAgICAgICAgYXdhaXQgd3JpdGVVcGRhdGUoeyBjdXJyZW50RW1haWwsIG5ld0VtYWlsIH0sICd1dGlscy91c2Vycy5qc29uJyk7XHJcblxyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdFbWFpbCB1cGRhdGVkIHN1Y2Nlc3NmdWxseScgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignVXNlciBub3QgZm91bmQnKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnVXNlciBub3QgZm91bmQnIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignQW4gZXJyb3Igb2NjdXJyZWQ6JywgZXJyb3IpO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIHJlYWRKU09OLCB3cml0ZUpTT04sIHJlZ2lzdGVyLCBsb2dpbiwgdXBkYXRlRW1haWxcclxufTsiXSwibWFwcGluZ3MiOiIraFNBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosS0FBTSxDQUFFRSxJQUFLLENBQUMsRUFBQUYsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUMxQyxLQUFNLENBQUFDLEVBQUUsRUFBQUwsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQ0UsUUFBUSxFQUNqQyxLQUFNLENBQUFDLE1BQU0sRUFBQVAsY0FBQSxHQUFBRyxDQUFBLE1BQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEMsS0FBTSxDQUFBSSxVQUFVLEVBQUFSLGNBQUEsR0FBQUcsQ0FBQSxNQUFHLEVBQUUsRUFBRTtBQUV2QixjQUFlLENBQUFNLFFBQVFBLENBQUNDLFFBQVEsQ0FBRSxDQUFBVixjQUFBLEdBQUFXLENBQUEsTUFBQVgsY0FBQSxHQUFBRyxDQUFBLE1BQzlCLEdBQUksQ0FDQSxLQUFNLENBQUFTLElBQUksRUFBQVosY0FBQSxHQUFBRyxDQUFBLE1BQUcsS0FBTSxDQUFBRSxFQUFFLENBQUNRLFFBQVEsQ0FBQ0gsUUFBUSxDQUFFLE1BQU0sQ0FBQyxFQUFDVixjQUFBLEdBQUFHLENBQUEsTUFDakQsTUFBTyxDQUFBVyxJQUFJLENBQUNDLEtBQUssQ0FBQ0gsSUFBSSxDQUFDLENBQzNCLENBQUUsTUFBT0ksR0FBRyxDQUFFLENBQUFoQixjQUFBLEdBQUFHLENBQUEsTUFBRWMsT0FBTyxDQUFDQyxLQUFLLENBQUNGLEdBQUcsQ0FBQyxDQUFDaEIsY0FBQSxHQUFBRyxDQUFBLE1BQUMsS0FBTSxDQUFBYSxHQUFHLENBQUUs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