function cov_1aigrohpoa(){var path="C:\\Users\\cleme\\Documents\\DVOPS_Projects\\Project\\Group4-Project\\utils\\UserUtil.js";var hash="d00a2748981882f8760261952e6c4dd9e0ff100d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\cleme\\Documents\\DVOPS_Projects\\Project\\Group4-Project\\utils\\UserUtil.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:42}},"1":{start:{line:2,column:11},end:{line:2,column:33}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:4,column:19},end:{line:4,column:21}},"4":{start:{line:7,column:4},end:{line:10,column:52}},"5":{start:{line:8,column:21},end:{line:8,column:56}},"6":{start:{line:9,column:8},end:{line:9,column:32}},"7":{start:{line:10,column:20},end:{line:10,column:39}},"8":{start:{line:10,column:40},end:{line:10,column:50}},"9":{start:{line:14,column:4},end:{line:19,column:52}},"10":{start:{line:15,column:27},end:{line:15,column:51}},"11":{start:{line:16,column:8},end:{line:16,column:32}},"12":{start:{line:17,column:8},end:{line:17,column:73}},"13":{start:{line:18,column:8},end:{line:18,column:26}},"14":{start:{line:19,column:20},end:{line:19,column:39}},"15":{start:{line:19,column:40},end:{line:19,column:50}},"16":{start:{line:24,column:4},end:{line:57,column:5}},"17":{start:{line:25,column:22},end:{line:25,column:36}},"18":{start:{line:26,column:25},end:{line:26,column:42}},"19":{start:{line:27,column:8},end:{line:29,column:9}},"20":{start:{line:28,column:12},end:{line:28,column:73}},"21":{start:{line:31,column:30},end:{line:31,column:64}},"22":{start:{line:34,column:27},end:{line:34,column:75}},"23":{start:{line:34,column:54},end:{line:34,column:74}},"24":{start:{line:35,column:8},end:{line:38,column:9}},"25":{start:{line:37,column:12},end:{line:37,column:77}},"26":{start:{line:40,column:31},end:{line:40,column:70}},"27":{start:{line:43,column:24},end:{line:43,column:55}},"28":{start:{line:46,column:29},end:{line:46,column:73}},"29":{start:{line:51,column:8},end:{line:51,column:50}},"30":{start:{line:56,column:8},end:{line:56,column:64}},"31":{start:{line:60,column:4},end:{line:83,column:5}},"32":{start:{line:61,column:26},end:{line:61,column:40}},"33":{start:{line:62,column:29},end:{line:62,column:46}},"34":{start:{line:64,column:25},end:{line:64,column:59}},"35":{start:{line:65,column:31},end:{line:65,column:36}},"36":{start:{line:67,column:8},end:{line:74,column:9}},"37":{start:{line:67,column:21},end:{line:67,column:22}},"38":{start:{line:68,column:32},end:{line:68,column:43}},"39":{start:{line:70,column:12},end:{line:73,column:13}},"40":{start:{line:71,column:16},end:{line:71,column:40}},"41":{start:{line:72,column:16},end:{line:72,column:22}},"42":{start:{line:76,column:8},end:{line:80,column:9}},"43":{start:{line:77,column:12},end:{line:77,column:74}},"44":{start:{line:79,column:12},end:{line:79,column:77}},"45":{start:{line:82,column:8},end:{line:82,column:64}},"46":{start:{line:85,column:0},end:{line:176,column:3}},"47":{start:{line:86,column:4},end:{line:92,column:7}},"48":{start:{line:88,column:25},end:{line:90,column:9}},"49":{start:{line:91,column:8},end:{line:91,column:56}},"50":{start:{line:94,column:4},end:{line:97,column:7}},"51":{start:{line:96,column:8},end:{line:96,column:48}},"52":{start:{line:99,column:4},end:{line:126,column:7}},"53":{start:{line:101,column:20},end:{line:109,column:9}},"54":{start:{line:111,column:20},end:{line:120,column:9}},"55":{start:{line:113,column:16},end:{line:113,column:39}},"56":{start:{line:114,column:16},end:{line:114,column:28}},"57":{start:{line:117,column:16},end:{line:117,column:33}},"58":{start:{line:118,column:16},end:{line:118,column:28}},"59":{start:{line:122,column:8},end:{line:122,column:36}},"60":{start:{line:124,column:8},end:{line:124,column:45}},"61":{start:{line:125,column:8},end:{line:125,column:72}},"62":{start:{line:127,column:4},end:{line:150,column:7}},"63":{start:{line:128,column:20},end:{line:133,column:9}},"64":{start:{line:135,column:20},end:{line:144,column:9}},"65":{start:{line:137,column:16},end:{line:137,column:39}},"66":{start:{line:138,column:16},end:{line:138,column:28}},"67":{start:{line:141,column:16},end:{line:141,column:33}},"68":{start:{line:142,column:16},end:{line:142,column:28}},"69":{start:{line:146,column:8},end:{line:146,column:36}},"70":{start:{line:148,column:8},end:{line:148,column:45}},"71":{start:{line:149,column:8},end:{line:149,column:60}},"72":{start:{line:152,column:4},end:{line:175,column:7}},"73":{start:{line:153,column:20},end:{line:158,column:9}},"74":{start:{line:160,column:20},end:{line:169,column:9}},"75":{start:{line:162,column:16},end:{line:162,column:39}},"76":{start:{line:163,column:16},end:{line:163,column:28}},"77":{start:{line:166,column:16},end:{line:166,column:33}},"78":{start:{line:167,column:16},end:{line:167,column:28}},"79":{start:{line:171,column:8},end:{line:171,column:36}},"80":{start:{line:173,column:8},end:{line:173,column:45}},"81":{start:{line:174,column:8},end:{line:174,column:98}},"82":{start:{line:180,column:0},end:{line:182,column:2}}},fnMap:{"0":{name:"readJSON",decl:{start:{line:6,column:15},end:{line:6,column:23}},loc:{start:{line:6,column:34},end:{line:11,column:1}},line:6},"1":{name:"writeJSON",decl:{start:{line:13,column:15},end:{line:13,column:24}},loc:{start:{line:13,column:43},end:{line:20,column:1}},line:13},"2":{name:"register",decl:{start:{line:23,column:15},end:{line:23,column:23}},loc:{start:{line:23,column:34},end:{line:58,column:1}},line:23},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:46},end:{line:34,column:47}},loc:{start:{line:34,column:54},end:{line:34,column:74}},line:34},"4":{name:"login",decl:{start:{line:59,column:15},end:{line:59,column:20}},loc:{start:{line:59,column:31},end:{line:84,column:1}},line:59},"5":{name:"(anonymous_5)",decl:{start:{line:85,column:24},end:{line:85,column:25}},loc:{start:{line:85,column:30},end:{line:176,column:1}},line:85},"6":{name:"(anonymous_6)",decl:{start:{line:86,column:15},end:{line:86,column:16}},loc:{start:{line:86,column:27},end:{line:92,column:5}},line:86},"7":{name:"(anonymous_7)",decl:{start:{line:94,column:14},end:{line:94,column:15}},loc:{start:{line:94,column:26},end:{line:97,column:5}},line:94},"8":{name:"(anonymous_8)",decl:{start:{line:99,column:51},end:{line:99,column:52}},loc:{start:{line:99,column:63},end:{line:126,column:5}},line:99},"9":{name:"(anonymous_9)",decl:{start:{line:112,column:20},end:{line:112,column:21}},loc:{start:{line:112,column:36},end:{line:115,column:13}},line:112},"10":{name:"(anonymous_10)",decl:{start:{line:116,column:18},end:{line:116,column:19}},loc:{start:{line:116,column:34},end:{line:119,column:13}},line:116},"11":{name:"(anonymous_11)",decl:{start:{line:127,column:62},end:{line:127,column:63}},loc:{start:{line:127,column:74},end:{line:150,column:5}},line:127},"12":{name:"(anonymous_12)",decl:{start:{line:136,column:20},end:{line:136,column:21}},loc:{start:{line:136,column:36},end:{line:139,column:13}},line:136},"13":{name:"(anonymous_13)",decl:{start:{line:140,column:18},end:{line:140,column:19}},loc:{start:{line:140,column:34},end:{line:143,column:13}},line:140},"14":{name:"(anonymous_14)",decl:{start:{line:152,column:54},end:{line:152,column:55}},loc:{start:{line:152,column:66},end:{line:175,column:5}},line:152},"15":{name:"(anonymous_15)",decl:{start:{line:161,column:20},end:{line:161,column:21}},loc:{start:{line:161,column:36},end:{line:164,column:13}},line:161},"16":{name:"(anonymous_16)",decl:{start:{line:165,column:18},end:{line:165,column:19}},loc:{start:{line:165,column:34},end:{line:168,column:13}},line:165}},branchMap:{"0":{loc:{start:{line:27,column:8},end:{line:29,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:29,column:9}},{start:{line:27,column:8},end:{line:29,column:9}}],line:27},"1":{loc:{start:{line:27,column:12},end:{line:27,column:79}},type:"binary-expr",locations:[{start:{line:27,column:12},end:{line:27,column:32}},{start:{line:27,column:36},end:{line:27,column:56}},{start:{line:27,column:60},end:{line:27,column:79}}],line:27},"2":{loc:{start:{line:35,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:38,column:9}},{start:{line:35,column:8},end:{line:38,column:9}}],line:35},"3":{loc:{start:{line:70,column:12},end:{line:73,column:13}},type:"if",locations:[{start:{line:70,column:12},end:{line:73,column:13}},{start:{line:70,column:12},end:{line:73,column:13}}],line:70},"4":{loc:{start:{line:70,column:16},end:{line:70,column:88}},type:"binary-expr",locations:[{start:{line:70,column:16},end:{line:70,column:47}},{start:{line:70,column:51},end:{line:70,column:88}}],line:70},"5":{loc:{start:{line:76,column:8},end:{line:80,column:9}},type:"if",locations:[{start:{line:76,column:8},end:{line:80,column:9}},{start:{line:76,column:8},end:{line:80,column:9}}],line:76}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d00a2748981882f8760261952e6c4dd9e0ff100d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1aigrohpoa=function(){return actualCoverage;};}return actualCoverage;}cov_1aigrohpoa();const{User}=(cov_1aigrohpoa().s[0]++,require('../models/User'));const fs=(cov_1aigrohpoa().s[1]++,require('fs').promises);const bcrypt=(cov_1aigrohpoa().s[2]++,require('bcrypt'));const saltRounds=(cov_1aigrohpoa().s[3]++,10);// The number of salt rounds to use (higher is more secure but slower)
async function readJSON(filename){cov_1aigrohpoa().f[0]++;cov_1aigrohpoa().s[4]++;try{const data=(cov_1aigrohpoa().s[5]++,await fs.readFile(filename,'utf8'));cov_1aigrohpoa().s[6]++;return JSON.parse(data);}catch(err){cov_1aigrohpoa().s[7]++;console.error(err);cov_1aigrohpoa().s[8]++;throw err;}}async function writeJSON(object,filename){cov_1aigrohpoa().f[1]++;cov_1aigrohpoa().s[9]++;try{const allObjects=(cov_1aigrohpoa().s[10]++,await readJSON(filename));cov_1aigrohpoa().s[11]++;allObjects.push(object);cov_1aigrohpoa().s[12]++;await fs.writeFile(filename,JSON.stringify(allObjects),'utf8');cov_1aigrohpoa().s[13]++;return allObjects;}catch(err){cov_1aigrohpoa().s[14]++;console.error(err);cov_1aigrohpoa().s[15]++;throw err;}}async function register(req,res){cov_1aigrohpoa().f[2]++;cov_1aigrohpoa().s[16]++;try{const email=(cov_1aigrohpoa().s[17]++,req.body.email);const password=(cov_1aigrohpoa().s[18]++,req.body.password);cov_1aigrohpoa().s[19]++;if((cov_1aigrohpoa().b[1][0]++,!email.includes('@'))||(cov_1aigrohpoa().b[1][1]++,!email.includes('.'))||(cov_1aigrohpoa().b[1][2]++,password.length<6)){cov_1aigrohpoa().b[0][0]++;cov_1aigrohpoa().s[20]++;return res.status(500).json({message:'Validation error'});}else{cov_1aigrohpoa().b[0][1]++;}const existingUsers=(cov_1aigrohpoa().s[21]++,await readJSON('utils/users.json'));// Check if the email already exists in the list of users
const userExists=(cov_1aigrohpoa().s[22]++,existingUsers.some(user=>{cov_1aigrohpoa().f[3]++;cov_1aigrohpoa().s[23]++;return user.email===email;}));cov_1aigrohpoa().s[24]++;if(userExists){cov_1aigrohpoa().b[2][0]++;cov_1aigrohpoa().s[25]++;return res.status(400).json({message:'Email already exists'});}else{cov_1aigrohpoa().b[2][1]++;}const hashedPassword=(cov_1aigrohpoa().s[26]++,await bcrypt.hash(password,saltRounds));// Store the hashed password in the User object
const newUser=(cov_1aigrohpoa().s[27]++,new User(email,hashedPassword));// Write the newUser object with the hashed password to the JSON data store
const updatedUsers=(cov_1aigrohpoa().s[28]++,await writeJSON(newUser,'utils/users.json'));// Log the updated users for debugging
//console.log('Updated Users:', updatedUsers);
cov_1aigrohpoa().s[29]++;return res.status(201).json(updatedUsers);}catch(error){cov_1aigrohpoa().s[30]++;// Log the error for debugging
// console.error('Error in register function:', error);
return res.status(500).json({message:error.message});}}async function login(req,res){cov_1aigrohpoa().f[4]++;cov_1aigrohpoa().s[31]++;try{const userEmail=(cov_1aigrohpoa().s[32]++,req.body.email);const userPassword=(cov_1aigrohpoa().s[33]++,req.body.password);const allUsers=(cov_1aigrohpoa().s[34]++,await readJSON('utils/users.json'));let validCredentials=(cov_1aigrohpoa().s[35]++,false);cov_1aigrohpoa().s[36]++;for(let i=(cov_1aigrohpoa().s[37]++,0);i<allUsers.length;i++){const currentUser=(cov_1aigrohpoa().s[38]++,allUsers[i]);cov_1aigrohpoa().s[39]++;if((cov_1aigrohpoa().b[4][0]++,currentUser.email===userEmail)&&(cov_1aigrohpoa().b[4][1]++,currentUser.password===userPassword)){cov_1aigrohpoa().b[3][0]++;cov_1aigrohpoa().s[40]++;validCredentials=true;cov_1aigrohpoa().s[41]++;break;}else{cov_1aigrohpoa().b[3][1]++;}}cov_1aigrohpoa().s[42]++;if(validCredentials){cov_1aigrohpoa().b[5][0]++;cov_1aigrohpoa().s[43]++;return res.status(200).json({message:'Login successful!'});}else{cov_1aigrohpoa().b[5][1]++;cov_1aigrohpoa().s[44]++;return res.status(500).json({message:'Invalid credentials!'});}}catch(error){cov_1aigrohpoa().s[45]++;return res.status(500).json({message:error.message});}}cov_1aigrohpoa().s[46]++;describe('updateEmail',()=>{cov_1aigrohpoa().f[5]++;cov_1aigrohpoa().s[47]++;beforeEach(async()=>{cov_1aigrohpoa().f[6]++;// Create a test user and store it in the JSON file
const testUser=(cov_1aigrohpoa().s[48]++,{email:'testuser@example.com'});cov_1aigrohpoa().s[49]++;await writeJSON([testUser],'utils/users.json');});cov_1aigrohpoa().s[50]++;afterEach(async()=>{cov_1aigrohpoa().f[7]++;cov_1aigrohpoa().s[51]++;// Clean up the test data after each test
await writeJSON([],'utils/users.json');});cov_1aigrohpoa().s[52]++;it('should update email for an existing user',async()=>{cov_1aigrohpoa().f[8]++;// Assuming user ID 1 exists and the current email is 'testuser@example.com'
const req=(cov_1aigrohpoa().s[53]++,{params:{userId:1},body:{currentEmail:'unique_email_1700665706293@example.com',newEmail:'newemail@example.com'}});const res=(cov_1aigrohpoa().s[54]++,{status:function(code){cov_1aigrohpoa().f[9]++;cov_1aigrohpoa().s[55]++;this.statusCode=code;cov_1aigrohpoa().s[56]++;return this;},json:function(data){cov_1aigrohpoa().f[10]++;cov_1aigrohpoa().s[57]++;this.body=data;cov_1aigrohpoa().s[58]++;return this;}});cov_1aigrohpoa().s[59]++;await updateEmail(req,res);cov_1aigrohpoa().s[60]++;expect(res.statusCode).to.equal(200);cov_1aigrohpoa().s[61]++;expect(res.body.message).to.equal('Email updated successfully');});cov_1aigrohpoa().s[62]++;it('should return a 404 status if the user is not found',async()=>{cov_1aigrohpoa().f[11]++;const req=(cov_1aigrohpoa().s[63]++,{body:{currentEmail:'nonexistentuser@example.com',newEmail:'newemail@example.com'}});const res=(cov_1aigrohpoa().s[64]++,{status:function(code){cov_1aigrohpoa().f[12]++;cov_1aigrohpoa().s[65]++;this.statusCode=code;cov_1aigrohpoa().s[66]++;return this;},json:function(data){cov_1aigrohpoa().f[13]++;cov_1aigrohpoa().s[67]++;this.body=data;cov_1aigrohpoa().s[68]++;return this;}});cov_1aigrohpoa().s[69]++;await updateEmail(req,res);cov_1aigrohpoa().s[70]++;expect(res.statusCode).to.equal(404);cov_1aigrohpoa().s[71]++;expect(res.body.message).to.equal('User not found');});cov_1aigrohpoa().s[72]++;it('should return a 400 status for invalid data',async()=>{cov_1aigrohpoa().f[14]++;const req=(cov_1aigrohpoa().s[73]++,{body:{currentEmail:'testuser@example.com',newEmail:'invalidemail'}});const res=(cov_1aigrohpoa().s[74]++,{status:function(code){cov_1aigrohpoa().f[15]++;cov_1aigrohpoa().s[75]++;this.statusCode=code;cov_1aigrohpoa().s[76]++;return this;},json:function(data){cov_1aigrohpoa().f[16]++;cov_1aigrohpoa().s[77]++;this.body=data;cov_1aigrohpoa().s[78]++;return this;}});cov_1aigrohpoa().s[79]++;await updateEmail(req,res);cov_1aigrohpoa().s[80]++;expect(res.statusCode).to.equal(400);cov_1aigrohpoa().s[81]++;expect(res.body.message).to.equal('Invalid data: Missing fields or invalid email format');});});//test test
//test test 2
cov_1aigrohpoa().s[82]++;module.exports={readJSON,writeJSON,register,login};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWFpZ3JvaHBvYSIsImFjdHVhbENvdmVyYWdlIiwiVXNlciIsInMiLCJyZXF1aXJlIiwiZnMiLCJwcm9taXNlcyIsImJjcnlwdCIsInNhbHRSb3VuZHMiLCJyZWFkSlNPTiIsImZpbGVuYW1lIiwiZiIsImRhdGEiLCJyZWFkRmlsZSIsIkpTT04iLCJwYXJzZSIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsIndyaXRlSlNPTiIsIm9iamVjdCIsImFsbE9iamVjdHMiLCJwdXNoIiwid3JpdGVGaWxlIiwic3RyaW5naWZ5IiwicmVnaXN0ZXIiLCJyZXEiLCJyZXMiLCJlbWFpbCIsImJvZHkiLCJwYXNzd29yZCIsImIiLCJpbmNsdWRlcyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwiZXhpc3RpbmdVc2VycyIsInVzZXJFeGlzdHMiLCJzb21lIiwidXNlciIsImhhc2hlZFBhc3N3b3JkIiwiaGFzaCIsIm5ld1VzZXIiLCJ1cGRhdGVkVXNlcnMiLCJsb2dpbiIsInVzZXJFbWFpbCIsInVzZXJQYXNzd29yZCIsImFsbFVzZXJzIiwidmFsaWRDcmVkZW50aWFscyIsImkiLCJjdXJyZW50VXNlciIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsInRlc3RVc2VyIiwiYWZ0ZXJFYWNoIiwiaXQiLCJwYXJhbXMiLCJ1c2VySWQiLCJjdXJyZW50RW1haWwiLCJuZXdFbWFpbCIsImNvZGUiLCJzdGF0dXNDb2RlIiwidXBkYXRlRW1haWwiLCJleHBlY3QiLCJ0byIsImVxdWFsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlVzZXJVdGlsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVXNlciB9ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1VzZXInKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpLnByb21pc2VzO1xyXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKTtcclxuY29uc3Qgc2FsdFJvdW5kcyA9IDEwOyAvLyBUaGUgbnVtYmVyIG9mIHNhbHQgcm91bmRzIHRvIHVzZSAoaGlnaGVyIGlzIG1vcmUgc2VjdXJlIGJ1dCBzbG93ZXIpXHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWFkSlNPTihmaWxlbmFtZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZnMucmVhZEZpbGUoZmlsZW5hbWUsICd1dGY4Jyk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHsgY29uc29sZS5lcnJvcihlcnIpOyB0aHJvdyBlcnI7IH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gd3JpdGVKU09OKG9iamVjdCwgZmlsZW5hbWUpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgYWxsT2JqZWN0cyA9IGF3YWl0IHJlYWRKU09OKGZpbGVuYW1lKTtcclxuICAgICAgICBhbGxPYmplY3RzLnB1c2gob2JqZWN0KTtcclxuICAgICAgICBhd2FpdCBmcy53cml0ZUZpbGUoZmlsZW5hbWUsIEpTT04uc3RyaW5naWZ5KGFsbE9iamVjdHMpLCAndXRmOCcpO1xyXG4gICAgICAgIHJldHVybiBhbGxPYmplY3RzO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7IGNvbnNvbGUuZXJyb3IoZXJyKTsgdGhyb3cgZXJyOyB9XHJcbn1cclxuXHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWdpc3RlcihyZXEsIHJlcykge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBlbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkID0gcmVxLmJvZHkucGFzc3dvcmQ7XHJcbiAgICAgICAgaWYgKCFlbWFpbC5pbmNsdWRlcygnQCcpIHx8ICFlbWFpbC5pbmNsdWRlcygnLicpIHx8IHBhc3N3b3JkLmxlbmd0aCA8IDYpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ1ZhbGlkYXRpb24gZXJyb3InIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VycyA9IGF3YWl0IHJlYWRKU09OKCd1dGlscy91c2Vycy5qc29uJyk7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBlbWFpbCBhbHJlYWR5IGV4aXN0cyBpbiB0aGUgbGlzdCBvZiB1c2Vyc1xyXG4gICAgICAgIGNvbnN0IHVzZXJFeGlzdHMgPSBleGlzdGluZ1VzZXJzLnNvbWUodXNlciA9PiB1c2VyLmVtYWlsID09PSBlbWFpbCk7XHJcbiAgICAgICAgaWYgKHVzZXJFeGlzdHMpIHtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdFbWFpbCBhbHJlYWR5IGV4aXN0cycgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBzYWx0Um91bmRzKTtcclxuXHJcbiAgICAgICAgLy8gU3RvcmUgdGhlIGhhc2hlZCBwYXNzd29yZCBpbiB0aGUgVXNlciBvYmplY3RcclxuICAgICAgICBjb25zdCBuZXdVc2VyID0gbmV3IFVzZXIoZW1haWwsIGhhc2hlZFBhc3N3b3JkKTtcclxuXHJcbiAgICAgICAgLy8gV3JpdGUgdGhlIG5ld1VzZXIgb2JqZWN0IHdpdGggdGhlIGhhc2hlZCBwYXNzd29yZCB0byB0aGUgSlNPTiBkYXRhIHN0b3JlXHJcbiAgICAgICAgY29uc3QgdXBkYXRlZFVzZXJzID0gYXdhaXQgd3JpdGVKU09OKG5ld1VzZXIsICd1dGlscy91c2Vycy5qc29uJyk7XHJcblxyXG4gICAgICAgIC8vIExvZyB0aGUgdXBkYXRlZCB1c2VycyBmb3IgZGVidWdnaW5nXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZygnVXBkYXRlZCBVc2VyczonLCB1cGRhdGVkVXNlcnMpO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24odXBkYXRlZFVzZXJzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgLy8gTG9nIHRoZSBlcnJvciBmb3IgZGVidWdnaW5nXHJcbiAgICAgICAgLy8gY29uc29sZS5lcnJvcignRXJyb3IgaW4gcmVnaXN0ZXIgZnVuY3Rpb246JywgZXJyb3IpO1xyXG5cclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGxvZ2luKHJlcSwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHVzZXJFbWFpbCA9IHJlcS5ib2R5LmVtYWlsO1xyXG4gICAgICAgIGNvbnN0IHVzZXJQYXNzd29yZCA9IHJlcS5ib2R5LnBhc3N3b3JkO1xyXG5cclxuICAgICAgICBjb25zdCBhbGxVc2VycyA9IGF3YWl0IHJlYWRKU09OKCd1dGlscy91c2Vycy5qc29uJyk7XHJcbiAgICAgICAgbGV0IHZhbGlkQ3JlZGVudGlhbHMgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxVc2Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VXNlciA9IGFsbFVzZXJzW2ldO1xyXG5cclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRVc2VyLmVtYWlsID09PSB1c2VyRW1haWwgJiYgY3VycmVudFVzZXIucGFzc3dvcmQgPT09IHVzZXJQYXNzd29yZCkge1xyXG4gICAgICAgICAgICAgICAgdmFsaWRDcmVkZW50aWFscyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHZhbGlkQ3JlZGVudGlhbHMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgbWVzc2FnZTogJ0xvZ2luIHN1Y2Nlc3NmdWwhJyB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnSW52YWxpZCBjcmVkZW50aWFscyEnIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxufVxyXG5kZXNjcmliZSgndXBkYXRlRW1haWwnLCAoKSA9PiB7XHJcbiAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcclxuICAgICAgICAvLyBDcmVhdGUgYSB0ZXN0IHVzZXIgYW5kIHN0b3JlIGl0IGluIHRoZSBKU09OIGZpbGVcclxuICAgICAgICBjb25zdCB0ZXN0VXNlciA9IHtcclxuICAgICAgICAgICAgZW1haWw6ICd0ZXN0dXNlckBleGFtcGxlLmNvbScsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBhd2FpdCB3cml0ZUpTT04oW3Rlc3RVc2VyXSwgJ3V0aWxzL3VzZXJzLmpzb24nKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFmdGVyRWFjaChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy8gQ2xlYW4gdXAgdGhlIHRlc3QgZGF0YSBhZnRlciBlYWNoIHRlc3RcclxuICAgICAgICBhd2FpdCB3cml0ZUpTT04oW10sICd1dGlscy91c2Vycy5qc29uJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpdCgnc2hvdWxkIHVwZGF0ZSBlbWFpbCBmb3IgYW4gZXhpc3RpbmcgdXNlcicsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvLyBBc3N1bWluZyB1c2VyIElEIDEgZXhpc3RzIGFuZCB0aGUgY3VycmVudCBlbWFpbCBpcyAndGVzdHVzZXJAZXhhbXBsZS5jb20nXHJcbiAgICAgICAgY29uc3QgcmVxID0ge1xyXG4gICAgICAgICAgICBwYXJhbXM6IHtcclxuICAgICAgICAgICAgICAgIHVzZXJJZDogMSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYm9keToge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudEVtYWlsOiAndW5pcXVlX2VtYWlsXzE3MDA2NjU3MDYyOTNAZXhhbXBsZS5jb20nLFxyXG4gICAgICAgICAgICAgICAgbmV3RW1haWw6ICduZXdlbWFpbEBleGFtcGxlLmNvbScsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgfTtcclxuICAgIFxyXG4gICAgICAgIGNvbnN0IHJlcyA9IHtcclxuICAgICAgICAgICAgc3RhdHVzOiBmdW5jdGlvbiAoY29kZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gY29kZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBqc29uOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ib2R5ID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICBcclxuICAgICAgICBhd2FpdCB1cGRhdGVFbWFpbChyZXEsIHJlcyk7XHJcbiAgICBcclxuICAgICAgICBleHBlY3QocmVzLnN0YXR1c0NvZGUpLnRvLmVxdWFsKDIwMCk7XHJcbiAgICAgICAgZXhwZWN0KHJlcy5ib2R5Lm1lc3NhZ2UpLnRvLmVxdWFsKCdFbWFpbCB1cGRhdGVkIHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgfSk7XHJcbiAgICBpdCgnc2hvdWxkIHJldHVybiBhIDQwNCBzdGF0dXMgaWYgdGhlIHVzZXIgaXMgbm90IGZvdW5kJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlcSA9IHtcclxuICAgICAgICAgICAgYm9keToge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudEVtYWlsOiAnbm9uZXhpc3RlbnR1c2VyQGV4YW1wbGUuY29tJyxcclxuICAgICAgICAgICAgICAgIG5ld0VtYWlsOiAnbmV3ZW1haWxAZXhhbXBsZS5jb20nLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGNvbnN0IHJlcyA9IHtcclxuICAgICAgICAgICAgc3RhdHVzOiBmdW5jdGlvbiAoY29kZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gY29kZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBqc29uOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ib2R5ID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGF3YWl0IHVwZGF0ZUVtYWlsKHJlcSwgcmVzKTtcclxuXHJcbiAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXNDb2RlKS50by5lcXVhbCg0MDQpO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keS5tZXNzYWdlKS50by5lcXVhbCgnVXNlciBub3QgZm91bmQnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgNDAwIHN0YXR1cyBmb3IgaW52YWxpZCBkYXRhJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlcSA9IHtcclxuICAgICAgICAgICAgYm9keToge1xyXG4gICAgICAgICAgICAgICAgY3VycmVudEVtYWlsOiAndGVzdHVzZXJAZXhhbXBsZS5jb20nLFxyXG4gICAgICAgICAgICAgICAgbmV3RW1haWw6ICdpbnZhbGlkZW1haWwnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGNvbnN0IHJlcyA9IHtcclxuICAgICAgICAgICAgc3RhdHVzOiBmdW5jdGlvbiAoY29kZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gY29kZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBqc29uOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ib2R5ID0gZGF0YTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGF3YWl0IHVwZGF0ZUVtYWlsKHJlcSwgcmVzKTtcclxuXHJcbiAgICAgICAgZXhwZWN0KHJlcy5zdGF0dXNDb2RlKS50by5lcXVhbCg0MDApO1xyXG4gICAgICAgIGV4cGVjdChyZXMuYm9keS5tZXNzYWdlKS50by5lcXVhbCgnSW52YWxpZCBkYXRhOiBNaXNzaW5nIGZpZWxkcyBvciBpbnZhbGlkIGVtYWlsIGZvcm1hdCcpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG4vL3Rlc3QgdGVzdFxyXG4vL3Rlc3QgdGVzdCAyXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIHJlYWRKU09OLCB3cml0ZUpTT04sIHJlZ2lzdGVyLCBsb2dpblxyXG59OyJdLCJtYXBwaW5ncyI6ImlxVEFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWixLQUFNLENBQUVFLElBQUssQ0FBQyxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQzFDLEtBQU0sQ0FBQUMsRUFBRSxFQUFBTCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDRSxRQUFRLEVBQ2pDLEtBQU0sQ0FBQUMsTUFBTSxFQUFBUCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUNoQyxLQUFNLENBQUFJLFVBQVUsRUFBQVIsY0FBQSxH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