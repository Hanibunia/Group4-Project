function cov_11k52ippo4(){var path="C:\\Users\\Derrick\\Documents\\DVOPS_Projects\\test 3\\Group4-Project\\utils\\ReviewUtil.js";var hash="2e56463ada4fb9db0017589b13c6b7642219f12f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Derrick\\Documents\\DVOPS_Projects\\test 3\\Group4-Project\\utils\\ReviewUtil.js",statementMap:{"0":{start:{line:1,column:19},end:{line:1,column:46}},"1":{start:{line:2,column:11},end:{line:2,column:33}},"2":{start:{line:3,column:23},end:{line:3,column:38}},"3":{start:{line:6,column:4},end:{line:14,column:5}},"4":{start:{line:7,column:21},end:{line:7,column:56}},"5":{start:{line:8,column:25},end:{line:8,column:41}},"6":{start:{line:10,column:8},end:{line:10,column:24}},"7":{start:{line:12,column:8},end:{line:12,column:27}},"8":{start:{line:13,column:8},end:{line:13,column:18}},"9":{start:{line:17,column:4},end:{line:37,column:5}},"10":{start:{line:18,column:27},end:{line:18,column:51}},"11":{start:{line:20,column:8},end:{line:30,column:9}},"12":{start:{line:22,column:34},end:{line:22,column:140}},"13":{start:{line:22,column:60},end:{line:22,column:139}},"14":{start:{line:22,column:94},end:{line:22,column:138}},"15":{start:{line:23,column:12},end:{line:23,column:46}},"16":{start:{line:26,column:27},end:{line:26,column:103}},"17":{start:{line:26,column:60},end:{line:26,column:102}},"18":{start:{line:27,column:12},end:{line:29,column:13}},"19":{start:{line:28,column:16},end:{line:28,column:40}},"20":{start:{line:32,column:8},end:{line:32,column:73}},"21":{start:{line:33,column:8},end:{line:33,column:26}},"22":{start:{line:35,column:8},end:{line:35,column:27}},"23":{start:{line:36,column:8},end:{line:36,column:18}},"24":{start:{line:84,column:4},end:{line:124,column:5}},"25":{start:{line:85,column:22},end:{line:85,column:36}},"26":{start:{line:86,column:39},end:{line:86,column:47}},"27":{start:{line:89,column:27},end:{line:89,column:55}},"28":{start:{line:90,column:8},end:{line:92,column:9}},"29":{start:{line:91,column:12},end:{line:91,column:109}},"30":{start:{line:94,column:25},end:{line:94,column:59}},"31":{start:{line:95,column:27},end:{line:95,column:70}},"32":{start:{line:95,column:49},end:{line:95,column:69}},"33":{start:{line:97,column:8},end:{line:120,column:9}},"34":{start:{line:98,column:29},end:{line:98,column:37}},"35":{start:{line:99,column:27},end:{line:99,column:74}},"36":{start:{line:100,column:31},end:{line:100,column:67}},"37":{start:{line:103,column:40},end:{line:103,column:116}},"38":{start:{line:103,column:79},end:{line:103,column:115}},"39":{start:{line:105,column:12},end:{line:117,column:13}},"40":{start:{line:107,column:16},end:{line:107,column:40}},"41":{start:{line:110,column:16},end:{line:110,column:66}},"42":{start:{line:113,column:16},end:{line:113,column:47}},"43":{start:{line:116,column:16},end:{line:116,column:98}},"44":{start:{line:119,column:12},end:{line:119,column:64}},"45":{start:{line:122,column:8},end:{line:122,column:51}},"46":{start:{line:123,column:8},end:{line:123,column:67}},"47":{start:{line:130,column:4},end:{line:170,column:5}},"48":{start:{line:132,column:22},end:{line:132,column:36}},"49":{start:{line:133,column:49},end:{line:133,column:57}},"50":{start:{line:136,column:27},end:{line:136,column:55}},"51":{start:{line:137,column:8},end:{line:140,column:9}},"52":{start:{line:139,column:12},end:{line:139,column:85}},"53":{start:{line:142,column:27},end:{line:142,column:63}},"54":{start:{line:146,column:28},end:{line:148,column:9}},"55":{start:{line:147,column:21},end:{line:147,column:73}},"56":{start:{line:150,column:8},end:{line:150,column:50}},"57":{start:{line:153,column:8},end:{line:166,column:9}},"58":{start:{line:155,column:12},end:{line:155,column:60}},"59":{start:{line:156,column:12},end:{line:156,column:52}},"60":{start:{line:159,column:12},end:{line:159,column:90}},"61":{start:{line:162,column:12},end:{line:162,column:58}},"62":{start:{line:164,column:12},end:{line:164,column:59}},"63":{start:{line:165,column:12},end:{line:165,column:79}},"64":{start:{line:168,column:8},end:{line:168,column:51}},"65":{start:{line:169,column:8},end:{line:169,column:67}},"66":{start:{line:175,column:4},end:{line:226,column:5}},"67":{start:{line:177,column:22},end:{line:177,column:36}},"68":{start:{line:178,column:29},end:{line:178,column:37}},"69":{start:{line:181,column:27},end:{line:181,column:55}},"70":{start:{line:182,column:8},end:{line:185,column:9}},"71":{start:{line:183,column:12},end:{line:183,column:80}},"72":{start:{line:184,column:12},end:{line:184,column:109}},"73":{start:{line:188,column:25},end:{line:188,column:59}},"74":{start:{line:190,column:27},end:{line:190,column:70}},"75":{start:{line:190,column:49},end:{line:190,column:69}},"76":{start:{line:192,column:8},end:{line:222,column:9}},"77":{start:{line:193,column:31},end:{line:193,column:67}},"78":{start:{line:196,column:32},end:{line:198,column:13}},"79":{start:{line:197,column:25},end:{line:197,column:77}},"80":{start:{line:201,column:12},end:{line:218,column:13}},"81":{start:{line:203,column:38},end:{line:203,column:74}},"82":{start:{line:205,column:16},end:{line:213,column:17}},"83":{start:{line:207,column:20},end:{line:207,column:98}},"84":{start:{line:208,column:20},end:{line:208,column:88}},"85":{start:{line:209,column:20},end:{line:209,column:94}},"86":{start:{line:211,column:20},end:{line:211,column:72}},"87":{start:{line:212,column:20},end:{line:212,column:89}},"88":{start:{line:216,column:16},end:{line:216,column:61}},"89":{start:{line:217,column:16},end:{line:217,column:83}},"90":{start:{line:220,column:12},end:{line:220,column:42}},"91":{start:{line:221,column:12},end:{line:221,column:64}},"92":{start:{line:224,column:8},end:{line:224,column:51}},"93":{start:{line:225,column:8},end:{line:225,column:67}},"94":{start:{line:230,column:0},end:{line:232,column:2}}},fnMap:{"0":{name:"readJSON",decl:{start:{line:5,column:15},end:{line:5,column:23}},loc:{start:{line:5,column:34},end:{line:15,column:1}},line:5},"1":{name:"writeJSON",decl:{start:{line:16,column:15},end:{line:16,column:24}},loc:{start:{line:16,column:43},end:{line:38,column:1}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:48},end:{line:22,column:49}},loc:{start:{line:22,column:60},end:{line:22,column:139}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:77},end:{line:22,column:78}},loc:{start:{line:22,column:94},end:{line:22,column:138}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:43},end:{line:26,column:44}},loc:{start:{line:26,column:60},end:{line:26,column:102}},line:26},"5":{name:"addReview",decl:{start:{line:83,column:15},end:{line:83,column:24}},loc:{start:{line:83,column:35},end:{line:125,column:1}},line:83},"6":{name:"(anonymous_6)",decl:{start:{line:95,column:41},end:{line:95,column:42}},loc:{start:{line:95,column:49},end:{line:95,column:69}},line:95},"7":{name:"(anonymous_7)",decl:{start:{line:103,column:61},end:{line:103,column:62}},loc:{start:{line:103,column:79},end:{line:103,column:115}},line:103},"8":{name:"updateReview",decl:{start:{line:129,column:15},end:{line:129,column:27}},loc:{start:{line:129,column:38},end:{line:171,column:1}},line:129},"9":{name:"(anonymous_9)",decl:{start:{line:147,column:12},end:{line:147,column:13}},loc:{start:{line:147,column:21},end:{line:147,column:73}},line:147},"10":{name:"deleteReview",decl:{start:{line:174,column:15},end:{line:174,column:27}},loc:{start:{line:174,column:38},end:{line:227,column:1}},line:174},"11":{name:"(anonymous_11)",decl:{start:{line:190,column:41},end:{line:190,column:42}},loc:{start:{line:190,column:49},end:{line:190,column:69}},line:190},"12":{name:"(anonymous_12)",decl:{start:{line:197,column:16},end:{line:197,column:17}},loc:{start:{line:197,column:25},end:{line:197,column:77}},line:197}},branchMap:{"0":{loc:{start:{line:20,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:20,column:8},end:{line:30,column:9}},{start:{line:20,column:8},end:{line:30,column:9}}],line:20},"1":{loc:{start:{line:27,column:12},end:{line:29,column:13}},type:"if",locations:[{start:{line:27,column:12},end:{line:29,column:13}},{start:{line:27,column:12},end:{line:29,column:13}}],line:27},"2":{loc:{start:{line:90,column:8},end:{line:92,column:9}},type:"if",locations:[{start:{line:90,column:8},end:{line:92,column:9}},{start:{line:90,column:8},end:{line:92,column:9}}],line:90},"3":{loc:{start:{line:90,column:12},end:{line:90,column:132}},type:"binary-expr",locations:[{start:{line:90,column:12},end:{line:90,column:18}},{start:{line:90,column:22},end:{line:90,column:45}},{start:{line:90,column:49},end:{line:90,column:62}},{start:{line:90,column:66},end:{line:90,column:76}},{start:{line:90,column:80},end:{line:90,column:90}},{start:{line:90,column:94},end:{line:90,column:105}},{start:{line:90,column:109},end:{line:90,column:132}}],line:90},"4":{loc:{start:{line:97,column:8},end:{line:120,column:9}},type:"if",locations:[{start:{line:97,column:8},end:{line:120,column:9}},{start:{line:97,column:8},end:{line:120,column:9}}],line:97},"5":{loc:{start:{line:105,column:12},end:{line:117,column:13}},type:"if",locations:[{start:{line:105,column:12},end:{line:117,column:13}},{start:{line:105,column:12},end:{line:117,column:13}}],line:105},"6":{loc:{start:{line:137,column:8},end:{line:140,column:9}},type:"if",locations:[{start:{line:137,column:8},end:{line:140,column:9}},{start:{line:137,column:8},end:{line:140,column:9}}],line:137},"7":{loc:{start:{line:137,column:12},end:{line:137,column:130}},type:"binary-expr",locations:[{start:{line:137,column:12},end:{line:137,column:18}},{start:{line:137,column:22},end:{line:137,column:31}},{start:{line:137,column:35},end:{line:137,column:58}},{start:{line:137,column:62},end:{line:137,column:75}},{start:{line:137,column:79},end:{line:137,column:89}},{start:{line:137,column:93},end:{line:137,column:103}},{start:{line:137,column:107},end:{line:137,column:130}}],line:137},"8":{loc:{start:{line:147,column:21},end:{line:147,column:73}},type:"binary-expr",locations:[{start:{line:147,column:21},end:{line:147,column:42}},{start:{line:147,column:46},end:{line:147,column:73}}],line:147},"9":{loc:{start:{line:153,column:8},end:{line:166,column:9}},type:"if",locations:[{start:{line:153,column:8},end:{line:166,column:9}},{start:{line:153,column:8},end:{line:166,column:9}}],line:153},"10":{loc:{start:{line:182,column:8},end:{line:185,column:9}},type:"if",locations:[{start:{line:182,column:8},end:{line:185,column:9}},{start:{line:182,column:8},end:{line:185,column:9}}],line:182},"11":{loc:{start:{line:182,column:12},end:{line:182,column:58}},type:"binary-expr",locations:[{start:{line:182,column:12},end:{line:182,column:18}},{start:{line:182,column:22},end:{line:182,column:45}},{start:{line:182,column:49},end:{line:182,column:58}}],line:182},"12":{loc:{start:{line:192,column:8},end:{line:222,column:9}},type:"if",locations:[{start:{line:192,column:8},end:{line:222,column:9}},{start:{line:192,column:8},end:{line:222,column:9}}],line:192},"13":{loc:{start:{line:197,column:25},end:{line:197,column:77}},type:"binary-expr",locations:[{start:{line:197,column:25},end:{line:197,column:46}},{start:{line:197,column:50},end:{line:197,column:77}}],line:197},"14":{loc:{start:{line:201,column:12},end:{line:218,column:13}},type:"if",locations:[{start:{line:201,column:12},end:{line:218,column:13}},{start:{line:201,column:12},end:{line:218,column:13}}],line:201}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2e56463ada4fb9db0017589b13c6b7642219f12f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_11k52ippo4=function(){return actualCoverage;};}return actualCoverage;}cov_11k52ippo4();const{Review}=(cov_11k52ippo4().s[0]++,require('../models/Review'));const fs=(cov_11k52ippo4().s[1]++,require('fs').promises);const{v4:uuidv4}=(cov_11k52ippo4().s[2]++,require('uuid'));async function readJSON(filename){cov_11k52ippo4().f[0]++;cov_11k52ippo4().s[3]++;try{const data=(cov_11k52ippo4().s[4]++,await fs.readFile(filename,'utf8'));const allUsers=(cov_11k52ippo4().s[5]++,JSON.parse(data));//console.log("Loaded users from file:", allUsers); // Add this line for debugging
cov_11k52ippo4().s[6]++;return allUsers;}catch(err){cov_11k52ippo4().s[7]++;console.error(err);cov_11k52ippo4().s[8]++;throw err;}}async function writeJSON(object,filename){cov_11k52ippo4().f[1]++;cov_11k52ippo4().s[9]++;try{const allObjects=(cov_11k52ippo4().s[10]++,await readJSON(filename));cov_11k52ippo4().s[11]++;if(Array.isArray(object)){cov_11k52ippo4().b[0][0]++;// If object is an array, filter out existing entries before concatenating
const uniqueObjects=(cov_11k52ippo4().s[12]++,object.filter(newEntry=>{cov_11k52ippo4().f[2]++;cov_11k52ippo4().s[13]++;return!allObjects.some(existingEntry=>{cov_11k52ippo4().f[3]++;cov_11k52ippo4().s[14]++;return existingEntry.reviewId===newEntry.reviewId;});}));cov_11k52ippo4().s[15]++;allObjects.push(...uniqueObjects);}else{cov_11k52ippo4().b[0][1]++;// If object is not an array, check if it already exists before pushing
const exists=(cov_11k52ippo4().s[16]++,allObjects.some(existingEntry=>{cov_11k52ippo4().f[4]++;cov_11k52ippo4().s[17]++;return existingEntry.reviewId===object.reviewId;}));cov_11k52ippo4().s[18]++;if(!exists){cov_11k52ippo4().b[1][0]++;cov_11k52ippo4().s[19]++;allObjects.push(object);}else{cov_11k52ippo4().b[1][1]++;}}cov_11k52ippo4().s[20]++;await fs.writeFile(filename,JSON.stringify(allObjects),'utf8');cov_11k52ippo4().s[21]++;return allObjects;}catch(err){cov_11k52ippo4().s[22]++;console.error(err);cov_11k52ippo4().s[23]++;throw err;}}// async function viewReview(req, res) {
//     try {
//         const userEmail = req.params.userEmail;
//         if (!userEmail) {
//             return res.status(400).json({ message: 'Invalid data: Missing user email' });
//         }
//         const allReviews = await readJSON('utils/reviews.json');
//         const userReviews = allReviews.filter(entry => entry.userEmail === userEmail);
//         if (userReviews.length > 0) {
//             res.status(200).json(userReviews);
//         } else {
//             res.status(404).json({ message: 'No reviews found for the user' });
//         }
//     } catch (error) {
//         console.error('An error occurred:', error);
//         res.status(500).json({ message: 'Internal server error' });
//     }
// }
// async function viewAllReviews(req, res) {
//     try {
//         // Read all reviews from the file
//         const allReviews = await readJSON('utils/reviews.json');
//         // Check if there are any reviews
//         if (allReviews.length > 0) {
//             res.status(200).json(allReviews);
//         } else {
//             res.status(404).json({ message: 'No reviews found' });
//         }
//     } catch (error) {
//         console.error('An error occurred:', error);
//         res.status(500).json({ message: 'Internal server error' });
//     }
// }
async function addReview(req,res){cov_11k52ippo4().f[5]++;cov_11k52ippo4().s[24]++;try{const email=(cov_11k52ippo4().s[25]++,req.body.email);const{reviewText,rating}=(cov_11k52ippo4().s[26]++,req.body);// Enhanced input validation
const emailRegex=(cov_11k52ippo4().s[27]++,/^[^\s@]+@[^\s@]+\.[^\s@]+$/);cov_11k52ippo4().s[28]++;if((cov_11k52ippo4().b[3][0]++,!email)||(cov_11k52ippo4().b[3][1]++,!emailRegex.test(email))||(cov_11k52ippo4().b[3][2]++,isNaN(rating))||(cov_11k52ippo4().b[3][3]++,rating<1)||(cov_11k52ippo4().b[3][4]++,rating>5)||(cov_11k52ippo4().b[3][5]++,!reviewText)||(cov_11k52ippo4().b[3][6]++,reviewText.length>500)){cov_11k52ippo4().b[2][0]++;cov_11k52ippo4().s[29]++;return res.status(400).json({message:'Invalid data: Invalid email format or missing fields'});}else{cov_11k52ippo4().b[2][1]++;}const allUsers=(cov_11k52ippo4().s[30]++,await readJSON('utils/users.json'));const userExists=(cov_11k52ippo4().s[31]++,allUsers.some(user=>{cov_11k52ippo4().f[6]++;cov_11k52ippo4().s[32]++;return user.email===email;}));cov_11k52ippo4().s[33]++;if(userExists){cov_11k52ippo4().b[4][0]++;const reviewId=(cov_11k52ippo4().s[34]++,uuidv4());// Generate a unique identifier
const review=(cov_11k52ippo4().s[35]++,new Review(reviewId,email,reviewText,rating));const allReviews=(cov_11k52ippo4().s[36]++,await readJSON('utils/reviews.json'));// Check if a review with the same reviewId already exists
const existingReviewIndex=(cov_11k52ippo4().s[37]++,allReviews.findIndex(existingReview=>{cov_11k52ippo4().f[7]++;cov_11k52ippo4().s[38]++;return existingReview.reviewId===reviewId;}));cov_11k52ippo4().s[39]++;if(existingReviewIndex===-1){cov_11k52ippo4().b[5][0]++;cov_11k52ippo4().s[40]++;// Review with the same reviewId does not exist, add the new review
allReviews.push(review);// Use writeJSON to update the 'utils/reviews.json' file
cov_11k52ippo4().s[41]++;await writeJSON(allReviews,'utils/reviews.json');// Respond with an array containing only the newly added review
cov_11k52ippo4().s[42]++;res.status(201).json([review]);}else{cov_11k52ippo4().b[5][1]++;cov_11k52ippo4().s[43]++;// Review with the same reviewId already exists, respond with an error
res.status(400).json({message:'Review with the same reviewId already exists'});}}else{cov_11k52ippo4().b[4][1]++;cov_11k52ippo4().s[44]++;res.status(404).json({message:'User not found'});}}catch(error){cov_11k52ippo4().s[45]++;console.error('An error occurred:',error);cov_11k52ippo4().s[46]++;res.status(500).json({message:'Internal server error'});}}async function updateReview(req,res){cov_11k52ippo4().f[8]++;cov_11k52ippo4().s[47]++;try{// console.log('Before reading JSON file');
const email=(cov_11k52ippo4().s[48]++,req.body.email);const{reviewId,reviewText,rating}=(cov_11k52ippo4().s[49]++,req.body);// Enhanced input validation
const emailRegex=(cov_11k52ippo4().s[50]++,/^[^\s@]+@[^\s@]+\.[^\s@]+$/);cov_11k52ippo4().s[51]++;if((cov_11k52ippo4().b[7][0]++,!email)||(cov_11k52ippo4().b[7][1]++,!reviewId)||(cov_11k52ippo4().b[7][2]++,!emailRegex.test(email))||(cov_11k52ippo4().b[7][3]++,isNaN(rating))||(cov_11k52ippo4().b[7][4]++,rating<1)||(cov_11k52ippo4().b[7][5]++,rating>5)||(cov_11k52ippo4().b[7][6]++,reviewText.length>500)){cov_11k52ippo4().b[6][0]++;cov_11k52ippo4().s[52]++;// console.log('Invalid data: Missing fields');
return res.status(400).json({message:'Invalid data: Missing fields'});}else{cov_11k52ippo4().b[6][1]++;}const allReviews=(cov_11k52ippo4().s[53]++,await readJSON('utils/reviews.json'));// console.log('After reading JSON file', allReviews);
// Find the index of the review to be updated based on user email and reviewId
const reviewIndex=(cov_11k52ippo4().s[54]++,allReviews.findIndex(entry=>{cov_11k52ippo4().f[9]++;cov_11k52ippo4().s[55]++;return(cov_11k52ippo4().b[8][0]++,entry.email===email)&&(cov_11k52ippo4().b[8][1]++,entry.reviewId===reviewId);}));cov_11k52ippo4().s[56]++;console.log('Review index:',reviewIndex);// Check if the review is found
cov_11k52ippo4().s[57]++;if(reviewIndex!==-1){cov_11k52ippo4().b[9][0]++;cov_11k52ippo4().s[58]++;// Update the review with the new information
allReviews[reviewIndex].reviewText=reviewText;cov_11k52ippo4().s[59]++;allReviews[reviewIndex].rating=rating;// Rewrite the updated data back to the JSON file
cov_11k52ippo4().s[60]++;await fs.writeFile('utils/reviews.json',JSON.stringify(allReviews),'utf-8');// console.log('After writing updated data to JSON file', allReviews);
cov_11k52ippo4().s[61]++;res.status(200).json(allReviews[reviewIndex]);}else{cov_11k52ippo4().b[9][1]++;cov_11k52ippo4().s[62]++;console.error('Review not found for the user');cov_11k52ippo4().s[63]++;res.status(404).json({message:'Review not found for the user'});}}catch(error){cov_11k52ippo4().s[64]++;console.error('An error occurred:',error);cov_11k52ippo4().s[65]++;res.status(500).json({message:'Internal server error'});}}async function deleteReview(req,res){cov_11k52ippo4().f[10]++;cov_11k52ippo4().s[66]++;try{//getting email and id 
const email=(cov_11k52ippo4().s[67]++,req.body.email);const{reviewId}=(cov_11k52ippo4().s[68]++,req.body);//enhancing input validation
const emailRegex=(cov_11k52ippo4().s[69]++,/^[^\s@]+@[^\s@]+\.[^\s@]+$/);cov_11k52ippo4().s[70]++;if((cov_11k52ippo4().b[11][0]++,!email)||(cov_11k52ippo4().b[11][1]++,!emailRegex.test(email))||(cov_11k52ippo4().b[11][2]++,!reviewId)){cov_11k52ippo4().b[10][0]++;cov_11k52ippo4().s[71]++;console.log('Invalid data: Invalid email format or missing fields');cov_11k52ippo4().s[72]++;return res.status(400).json({message:'Invalid data: Invalid email format or missing fields'});}else{cov_11k52ippo4().b[10][1]++;}//reading of user data
const allUsers=(cov_11k52ippo4().s[73]++,await readJSON('utils/users.json'));//checkin for existing user
const userExists=(cov_11k52ippo4().s[74]++,allUsers.some(user=>{cov_11k52ippo4().f[11]++;cov_11k52ippo4().s[75]++;return user.email===email;}));cov_11k52ippo4().s[76]++;if(userExists){cov_11k52ippo4().b[12][0]++;const allReviews=(cov_11k52ippo4().s[77]++,await readJSON('utils/reviews.json'));//finding the index of the review that needs to be deleted
const reviewIndex=(cov_11k52ippo4().s[78]++,allReviews.findIndex(entry=>{cov_11k52ippo4().f[12]++;cov_11k52ippo4().s[79]++;return(cov_11k52ippo4().b[13][0]++,entry.email===email)&&(cov_11k52ippo4().b[13][1]++,entry.reviewId===reviewId);}));//checking if review exist
cov_11k52ippo4().s[80]++;if(reviewIndex!==-1){cov_11k52ippo4().b[14][0]++;//removing of review
const deletedReview=(cov_11k52ippo4().s[81]++,allReviews.splice(reviewIndex,1)[0]);cov_11k52ippo4().s[82]++;try{cov_11k52ippo4().s[83]++;//rewriting the updated data back to the JSON file
await fs.writeFile('utils/reviews.json',JSON.stringify(allReviews),'utf-8');cov_11k52ippo4().s[84]++;console.log('Review has been successfully deleted:',deletedReview);cov_11k52ippo4().s[85]++;res.status(200).json({message:'Review has been successfully deleted'});}catch(writeError){cov_11k52ippo4().s[86]++;console.error('Error writing to file:',writeError);cov_11k52ippo4().s[87]++;res.status(500).json({message:'Error updating data in the file'});}}else{cov_11k52ippo4().b[14][1]++;cov_11k52ippo4().s[88]++;//if review not found
console.log('Review not found for the user');cov_11k52ippo4().s[89]++;res.status(404).json({message:'Review not found for the user'});}}else{cov_11k52ippo4().b[12][1]++;cov_11k52ippo4().s[90]++;console.log('User not found');cov_11k52ippo4().s[91]++;res.status(404).json({message:'User not found'});}}catch(error){cov_11k52ippo4().s[92]++;console.error('An error occurred:',error);cov_11k52ippo4().s[93]++;res.status(500).json({message:'Internal server error'});}}cov_11k52ippo4().s[94]++;module.exports={readJSON,writeJSON,addReview,updateReview,deleteReview};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,