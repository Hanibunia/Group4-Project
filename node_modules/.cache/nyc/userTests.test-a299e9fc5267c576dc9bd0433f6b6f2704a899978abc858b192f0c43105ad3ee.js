function cov_29b02lei2b(){var path="E:\\vs studio code\\devops\\Group4-Project\\tests\\userTests.test.js";var hash="9eb873dea4e5bc8a08ae472d276d4acfb35524db";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\vs studio code\\devops\\Group4-Project\\tests\\userTests.test.js",statementMap:{"0":{start:{line:1,column:48},end:{line:1,column:64}},"1":{start:{line:2,column:19},end:{line:2,column:34}},"2":{start:{line:3,column:11},end:{line:3,column:33}},"3":{start:{line:4,column:14},end:{line:4,column:30}},"4":{start:{line:5,column:15},end:{line:5,column:32}},"5":{start:{line:6,column:21},end:{line:6,column:49}},"6":{start:{line:9,column:0},end:{line:185,column:3}},"7":{start:{line:10,column:26},end:{line:10,column:44}},"8":{start:{line:11,column:21},end:{line:11,column:23}},"9":{start:{line:13,column:4},end:{line:22,column:7}},"10":{start:{line:14,column:8},end:{line:21,column:9}},"11":{start:{line:15,column:12},end:{line:15,column:66}},"12":{start:{line:16,column:12},end:{line:16,column:48}},"13":{start:{line:19,column:12},end:{line:19,column:73}},"14":{start:{line:24,column:4},end:{line:27,column:7}},"15":{start:{line:30,column:4},end:{line:58,column:7}},"16":{start:{line:31,column:30},end:{line:31,column:70}},"17":{start:{line:33,column:20},end:{line:38,column:9}},"18":{start:{line:39,column:20},end:{line:55,column:9}},"19":{start:{line:41,column:16},end:{line:41,column:43}},"20":{start:{line:42,column:16},end:{line:42,column:28}},"21":{start:{line:45,column:16},end:{line:45,column:69}},"22":{start:{line:46,column:32},end:{line:46,column:55}},"23":{start:{line:47,column:16},end:{line:47,column:63}},"24":{start:{line:50,column:39},end:{line:50,column:55}},"25":{start:{line:53,column:16},end:{line:53,column:82}},"26":{start:{line:57,column:8},end:{line:57,column:33}},"27":{start:{line:60,column:4},end:{line:77,column:7}},"28":{start:{line:61,column:20},end:{line:66,column:9}},"29":{start:{line:67,column:20},end:{line:75,column:9}},"30":{start:{line:69,column:16},end:{line:69,column:43}},"31":{start:{line:70,column:16},end:{line:70,column:28}},"32":{start:{line:73,column:16},end:{line:73,column:66}},"33":{start:{line:76,column:8},end:{line:76,column:33}},"34":{start:{line:79,column:4},end:{line:96,column:7}},"35":{start:{line:80,column:20},end:{line:85,column:9}},"36":{start:{line:86,column:20},end:{line:94,column:9}},"37":{start:{line:88,column:16},end:{line:88,column:43}},"38":{start:{line:89,column:16},end:{line:89,column:28}},"39":{start:{line:92,column:16},end:{line:92,column:66}},"40":{start:{line:95,column:8},end:{line:95,column:33}},"41":{start:{line:97,column:4},end:{line:125,column:7}},"42":{start:{line:98,column:30},end:{line:98,column:45}},"43":{start:{line:100,column:20},end:{line:105,column:9}},"44":{start:{line:106,column:20},end:{line:116,column:9}},"45":{start:{line:108,column:16},end:{line:108,column:43}},"46":{start:{line:109,column:16},end:{line:109,column:28}},"47":{start:{line:112,column:16},end:{line:112,column:70}},"48":{start:{line:113,column:16},end:{line:113,column:68}},"49":{start:{line:118,column:8},end:{line:123,column:9}},"50":{start:{line:119,column:12},end:{line:119,column:37}},"51":{start:{line:122,column:12},end:{line:122,column:24}},"52":{start:{line:126,column:0},end:{line:150,column:3}},"53":{start:{line:127,column:16},end:{line:132,column:5}},"54":{start:{line:133,column:16},end:{line:141,column:5}},"55":{start:{line:135,column:12},end:{line:135,column:39}},"56":{start:{line:136,column:12},end:{line:136,column:24}},"57":{start:{line:139,column:12},end:{line:139,column:67}},"58":{start:{line:144,column:21},end:{line:144,column:91}},"59":{start:{line:146,column:4},end:{line:146,column:29}},"60":{start:{line:149,column:4},end:{line:149,column:23}},"61":{start:{line:152,column:0},end:{line:184,column:2}},"62":{start:{line:153,column:16},end:{line:158,column:5}},"63":{start:{line:159,column:16},end:{line:167,column:5}},"64":{start:{line:161,column:12},end:{line:161,column:39}},"65":{start:{line:162,column:12},end:{line:162,column:24}},"66":{start:{line:165,column:12},end:{line:165,column:67}},"67":{start:{line:170,column:23},end:{line:170,column:41}},"68":{start:{line:173,column:4},end:{line:173,column:75}},"69":{start:{line:175,column:4},end:{line:183,column:5}},"70":{start:{line:176,column:8},end:{line:176,column:33}},"71":{start:{line:179,column:8},end:{line:179,column:28}},"72":{start:{line:181,column:8},end:{line:181,column:29}},"73":{start:{line:182,column:8},end:{line:182,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:38},end:{line:9,column:39}},loc:{start:{line:9,column:44},end:{line:185,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:15},end:{line:13,column:16}},loc:{start:{line:13,column:27},end:{line:22,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:24,column:14},end:{line:24,column:15}},loc:{start:{line:24,column:26},end:{line:27,column:5}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:71},end:{line:30,column:72}},loc:{start:{line:30,column:83},end:{line:58,column:5}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:40,column:20},end:{line:40,column:21}},loc:{start:{line:40,column:36},end:{line:43,column:13}},line:40},"5":{name:"(anonymous_5)",decl:{start:{line:44,column:18},end:{line:44,column:19}},loc:{start:{line:44,column:40},end:{line:54,column:13}},line:44},"6":{name:"(anonymous_6)",decl:{start:{line:60,column:53},end:{line:60,column:54}},loc:{start:{line:60,column:65},end:{line:77,column:5}},line:60},"7":{name:"(anonymous_7)",decl:{start:{line:68,column:20},end:{line:68,column:21}},loc:{start:{line:68,column:36},end:{line:71,column:13}},line:68},"8":{name:"(anonymous_8)",decl:{start:{line:72,column:18},end:{line:72,column:19}},loc:{start:{line:72,column:34},end:{line:74,column:13}},line:72},"9":{name:"(anonymous_9)",decl:{start:{line:79,column:63},end:{line:79,column:64}},loc:{start:{line:79,column:75},end:{line:96,column:5}},line:79},"10":{name:"(anonymous_10)",decl:{start:{line:87,column:20},end:{line:87,column:21}},loc:{start:{line:87,column:36},end:{line:90,column:13}},line:87},"11":{name:"(anonymous_11)",decl:{start:{line:91,column:18},end:{line:91,column:19}},loc:{start:{line:91,column:34},end:{line:93,column:13}},line:91},"12":{name:"(anonymous_12)",decl:{start:{line:97,column:61},end:{line:97,column:62}},loc:{start:{line:97,column:73},end:{line:125,column:5}},line:97},"13":{name:"(anonymous_13)",decl:{start:{line:107,column:20},end:{line:107,column:21}},loc:{start:{line:107,column:36},end:{line:110,column:13}},line:107},"14":{name:"(anonymous_14)",decl:{start:{line:111,column:18},end:{line:111,column:19}},loc:{start:{line:111,column:34},end:{line:115,column:13}},line:111},"15":{name:"(anonymous_15)",decl:{start:{line:126,column:52},end:{line:126,column:53}},loc:{start:{line:126,column:64},end:{line:150,column:1}},line:126},"16":{name:"(anonymous_16)",decl:{start:{line:134,column:16},end:{line:134,column:17}},loc:{start:{line:134,column:32},end:{line:137,column:9}},line:134},"17":{name:"(anonymous_17)",decl:{start:{line:138,column:14},end:{line:138,column:15}},loc:{start:{line:138,column:30},end:{line:140,column:9}},line:138},"18":{name:"(anonymous_18)",decl:{start:{line:152,column:69},end:{line:152,column:70}},loc:{start:{line:152,column:81},end:{line:184,column:1}},line:152},"19":{name:"(anonymous_19)",decl:{start:{line:160,column:16},end:{line:160,column:17}},loc:{start:{line:160,column:32},end:{line:163,column:9}},line:160},"20":{name:"(anonymous_20)",decl:{start:{line:164,column:14},end:{line:164,column:15}},loc:{start:{line:164,column:30},end:{line:166,column:9}},line:164}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9eb873dea4e5bc8a08ae472d276d4acfb35524db"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_29b02lei2b=function(){return actualCoverage;};}return actualCoverage;}cov_29b02lei2b();const{describe,it,beforeEach,afterEach}=(cov_29b02lei2b().s[0]++,require('mocha'));const{expect}=(cov_29b02lei2b().s[1]++,require('chai'));const fs=(cov_29b02lei2b().s[2]++,require('fs').promises);const sinon=(cov_29b02lei2b().s[3]++,require('sinon'));// Import sinon
const bcrypt=(cov_29b02lei2b().s[4]++,require('bcrypt'));// Import bcrypt
const{register}=(cov_29b02lei2b().s[5]++,require('../utils/UserUtil'));cov_29b02lei2b().s[6]++;describe('Testing Register Function',()=>{cov_29b02lei2b().f[0]++;const usersFilePath=(cov_29b02lei2b().s[7]++,'utils/users.json');let orgContent=(cov_29b02lei2b().s[8]++,[]);cov_29b02lei2b().s[9]++;beforeEach(async()=>{cov_29b02lei2b().f[1]++;cov_29b02lei2b().s[10]++;try{cov_29b02lei2b().s[11]++;orgContent=await fs.readFile(usersFilePath,'utf8');cov_29b02lei2b().s[12]++;orgContent=JSON.parse(orgContent);//console.log('Before test 1st:', orgContent);
}catch(error){cov_29b02lei2b().s[13]++;console.error('Error reading or parsing users file:',error);// You might want to throw the error or handle it appropriately based on your needs
}});cov_29b02lei2b().s[14]++;afterEach(async()=>{cov_29b02lei2b().f[2]++;}// console.log('After test  1st:', orgContent);
// await fs.writeFile(usersFilePath, JSON.stringify(orgContent), 'utf8');
);cov_29b02lei2b().s[15]++;it('Should register a new user successfully with hashed password',async()=>{cov_29b02lei2b().f[3]++;const testUserEmail=(cov_29b02lei2b().s[16]++,`unique_email_${Date.now()}@example.com`);const req=(cov_29b02lei2b().s[17]++,{body:{email:testUserEmail,password:'123456'}});const res=(cov_29b02lei2b().s[18]++,{status:function(code){cov_29b02lei2b().f[4]++;cov_29b02lei2b().s[19]++;expect(code).to.equal(201);cov_29b02lei2b().s[20]++;return this;},json:async function(data){cov_29b02lei2b().f[5]++;cov_29b02lei2b().s[21]++;// Add the async keyword here
expect(data).to.have.lengthOf(orgContent.length+1);const newUser=(cov_29b02lei2b().s[22]++,data[orgContent.length]);cov_29b02lei2b().s[23]++;expect(newUser.email).to.equal(req.body.email);// Access the hashed password
const hashedPassword=(cov_29b02lei2b().s[24]++,newUser.password);// Perform assertions on the hashed password
cov_29b02lei2b().s[25]++;expect(await bcrypt.compare('123456',hashedPassword)).to.be.true;}});cov_29b02lei2b().s[26]++;await register(req,res);});cov_29b02lei2b().s[27]++;it('Should shows validation error due to email',async()=>{cov_29b02lei2b().f[6]++;const req=(cov_29b02lei2b().s[28]++,{body:{email:'simon#gmail.com',password:'123'}});const res=(cov_29b02lei2b().s[29]++,{status:function(code){cov_29b02lei2b().f[7]++;cov_29b02lei2b().s[30]++;expect(code).to.equal(500);cov_29b02lei2b().s[31]++;return this;},json:function(data){cov_29b02lei2b().f[8]++;cov_29b02lei2b().s[32]++;expect(data.message).to.equal('Validation error');}});cov_29b02lei2b().s[33]++;await register(req,res);});cov_29b02lei2b().s[34]++;it('Should shows validation error due to password length',async()=>{cov_29b02lei2b().f[9]++;const req=(cov_29b02lei2b().s[35]++,{body:{email:'simon@gmail.com',password:'123'}});const res=(cov_29b02lei2b().s[36]++,{status:function(code){cov_29b02lei2b().f[10]++;cov_29b02lei2b().s[37]++;expect(code).to.equal(500);cov_29b02lei2b().s[38]++;return this;},json:function(data){cov_29b02lei2b().f[11]++;cov_29b02lei2b().s[39]++;expect(data.message).to.equal('Validation error');}});cov_29b02lei2b().s[40]++;await register(req,res);});cov_29b02lei2b().s[41]++;it('Should not register a user if email already exists',async()=>{cov_29b02lei2b().f[12]++;const existingEmail=(cov_29b02lei2b().s[42]++,'abc@gmail.com');const req=(cov_29b02lei2b().s[43]++,{body:{email:existingEmail,password:'newpassword123'}});const res=(cov_29b02lei2b().s[44]++,{status:function(code){cov_29b02lei2b().f[13]++;cov_29b02lei2b().s[45]++;expect(code).to.equal(400);cov_29b02lei2b().s[46]++;return this;},json:function(data){cov_29b02lei2b().f[14]++;cov_29b02lei2b().s[47]++;expect(data.message).to.equal('Email already exists');cov_29b02lei2b().s[48]++;console.log('Response data message:',data.message);}});cov_29b02lei2b().s[49]++;try{cov_29b02lei2b().s[50]++;await register(req,res);}catch(error){cov_29b02lei2b().s[51]++;//console.error('Error during test execution:', error);
throw error;}});cov_29b02lei2b().s[52]++;it('Should handle an error when bcrypt.hash fails',async()=>{cov_29b02lei2b().f[15]++;const req=(cov_29b02lei2b().s[53]++,{body:{email:'test@example.com',password:'password123'}});const res=(cov_29b02lei2b().s[54]++,{status:function(code){cov_29b02lei2b().f[16]++;cov_29b02lei2b().s[55]++;expect(code).to.equal(500);cov_29b02lei2b().s[56]++;return this;},json:function(data){cov_29b02lei2b().f[17]++;cov_29b02lei2b().s[57]++;expect(data.message).to.equal('Internal server error');}});// Stubbing bcrypt.hash
const hashStub=(cov_29b02lei2b().s[58]++,sinon.stub(bcrypt,'hash').rejects(new Error('Internal server error')));cov_29b02lei2b().s[59]++;await register(req,res);// Restoring stubs and mocks
cov_29b02lei2b().s[60]++;hashStub.restore();});cov_29b02lei2b().s[61]++;it('Should handle an error when bcrypt.hash fails using Sinon mock',async()=>{cov_29b02lei2b().f[18]++;const req=(cov_29b02lei2b().s[62]++,{body:{email:'test@example.com',password:'password123'}});const res=(cov_29b02lei2b().s[63]++,{status:function(code){cov_29b02lei2b().f[19]++;cov_29b02lei2b().s[64]++;expect(code).to.equal(500);cov_29b02lei2b().s[65]++;return this;},json:function(data){cov_29b02lei2b().f[20]++;cov_29b02lei2b().s[66]++;expect(data.message).to.equal('Internal server error');}});// Create a Sinon mock for bcrypt
const bcryptMock=(cov_29b02lei2b().s[67]++,sinon.mock(bcrypt));// Expect the 'hash' method to be called and reject with an error
cov_29b02lei2b().s[68]++;bcryptMock.expects('hash').rejects(new Error('Internal server error'));cov_29b02lei2b().s[69]++;try{cov_29b02lei2b().s[70]++;await register(req,res);}catch(error){cov_29b02lei2b().s[71]++;// Ensure that the 'hash' method was called
bcryptMock.verify();// Restore the original 'bcrypt' library to avoid affecting other tests
cov_29b02lei2b().s[72]++;bcryptMock.restore();cov_29b02lei2b().s[73]++;throw error;}});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,