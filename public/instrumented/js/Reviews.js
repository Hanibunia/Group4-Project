function cov_nxy146syb(){var path="C:\\Users\\Derrick\\Documents\\DVOPS_Projects\\test 3\\Group4-Project\\public\\js\\Reviews.js";var hash="4ef33f10ce11b2b84913308a869c174aa13b7e49";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Derrick\\Documents\\DVOPS_Projects\\test 3\\Group4-Project\\public\\js\\Reviews.js",statementMap:{"0":{start:{line:4,column:26},end:{line:4,column:55}},"1":{start:{line:5,column:4},end:{line:5,column:48}},"2":{start:{line:7,column:4},end:{line:11,column:5}},"3":{start:{line:7,column:17},end:{line:7,column:18}},"4":{start:{line:8,column:25},end:{line:8,column:52}},"5":{start:{line:9,column:8},end:{line:9,column:77}},"6":{start:{line:10,column:8},end:{line:10,column:44}},"7":{start:{line:13,column:4},end:{line:13,column:25}},"8":{start:{line:17,column:21},end:{line:17,column:48}},"9":{start:{line:18,column:4},end:{line:18,column:58}},"10":{start:{line:19,column:4},end:{line:19,column:20}},"11":{start:{line:23,column:23},end:{line:23,column:50}},"12":{start:{line:24,column:4},end:{line:24,column:67}},"13":{start:{line:25,column:4},end:{line:25,column:22}},"14":{start:{line:30,column:25},end:{line:30,column:48}},"15":{start:{line:124,column:4},end:{line:159,column:5}},"16":{start:{line:125,column:29},end:{line:125,column:60}},"17":{start:{line:127,column:8},end:{line:127,column:51}},"18":{start:{line:128,column:8},end:{line:128,column:37}},"19":{start:{line:129,column:8},end:{line:129,column:48}},"20":{start:{line:130,column:8},end:{line:130,column:39}},"21":{start:{line:131,column:8},end:{line:131,column:52}},"22":{start:{line:133,column:25},end:{line:144,column:10}},"23":{start:{line:146,column:8},end:{line:146,column:50}},"24":{start:{line:158,column:8},end:{line:158,column:51}},"25":{start:{line:163,column:4},end:{line:181,column:5}},"26":{start:{line:164,column:25},end:{line:164,column:83}},"27":{start:{line:165,column:21},end:{line:165,column:42}},"28":{start:{line:179,column:8},end:{line:179,column:51}},"29":{start:{line:180,column:8},end:{line:180,column:20}},"30":{start:{line:184,column:4},end:{line:215,column:5}},"31":{start:{line:185,column:29},end:{line:185,column:60}},"32":{start:{line:187,column:8},end:{line:187,column:64}},"33":{start:{line:188,column:8},end:{line:188,column:37}},"34":{start:{line:189,column:8},end:{line:189,column:44}},"35":{start:{line:190,column:8},end:{line:190,column:48}},"36":{start:{line:191,column:8},end:{line:191,column:39}},"37":{start:{line:192,column:8},end:{line:192,column:52}},"38":{start:{line:193,column:25},end:{line:205,column:10}},"39":{start:{line:214,column:8},end:{line:214,column:51}},"40":{start:{line:219,column:35},end:{line:219,column:79}},"41":{start:{line:220,column:31},end:{line:220,column:71}},"42":{start:{line:223,column:4},end:{line:223,column:53}},"43":{start:{line:224,column:4},end:{line:224,column:45}},"44":{start:{line:227,column:4},end:{line:227,column:62}},"45":{start:{line:228,column:4},end:{line:228,column:56}},"46":{start:{line:231,column:4},end:{line:231,column:42}}},fnMap:{"0":{name:"createRatingStars",decl:{start:{line:3,column:9},end:{line:3,column:26}},loc:{start:{line:3,column:35},end:{line:14,column:1}},line:3},"1":{name:"createEditIcon",decl:{start:{line:16,column:9},end:{line:16,column:23}},loc:{start:{line:16,column:26},end:{line:20,column:1}},line:16},"2":{name:"createDeleteIcon",decl:{start:{line:22,column:9},end:{line:22,column:25}},loc:{start:{line:22,column:28},end:{line:26,column:1}},line:22},"3":{name:"showReviews",decl:{start:{line:29,column:9},end:{line:29,column:20}},loc:{start:{line:29,column:33},end:{line:120,column:1}},line:29},"4":{name:"addReview",decl:{start:{line:123,column:15},end:{line:123,column:24}},loc:{start:{line:123,column:52},end:{line:160,column:1}},line:123},"5":{name:"getSelectedRestaurantId",decl:{start:{line:162,column:15},end:{line:162,column:38}},loc:{start:{line:162,column:41},end:{line:182,column:1}},line:162},"6":{name:"updateReview",decl:{start:{line:183,column:15},end:{line:183,column:27}},loc:{start:{line:183,column:65},end:{line:216,column:1}},line:183},"7":{name:"openUpdateReviewModal",decl:{start:{line:217,column:9},end:{line:217,column:30}},loc:{start:{line:217,column:39},end:{line:232,column:1}},line:217}},branchMap:{"0":{loc:{start:{line:9,column:48},end:{line:9,column:75}},type:"cond-expr",locations:[{start:{line:9,column:62},end:{line:9,column:67}},{start:{line:9,column:70},end:{line:9,column:75}}],line:9}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4ef33f10ce11b2b84913308a869c174aa13b7e49"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_nxy146syb=function(){return actualCoverage;};}return actualCoverage;}cov_nxy146syb();// Function to create star icons based on the rating
function createRatingStars(rating){cov_nxy146syb().f[0]++;const starContainer=(cov_nxy146syb().s[0]++,document.createElement('div'));cov_nxy146syb().s[1]++;starContainer.classList.add('rating-stars');cov_nxy146syb().s[2]++;for(let i=(cov_nxy146syb().s[3]++,1);i<=5;i++){const starIcon=(cov_nxy146syb().s[4]++,document.createElement('i'));cov_nxy146syb().s[5]++;starIcon.classList.add('fa','fa-star',i<=rating?(cov_nxy146syb().b[0][0]++,'fas'):(cov_nxy146syb().b[0][1]++,'far'));// Change 'filled' to 'fas'
cov_nxy146syb().s[6]++;starContainer.appendChild(starIcon);}cov_nxy146syb().s[7]++;return starContainer;}// Function to create an "Edit" icon
function createEditIcon(){cov_nxy146syb().f[1]++;const editIcon=(cov_nxy146syb().s[8]++,document.createElement('i'));cov_nxy146syb().s[9]++;editIcon.classList.add('fas','fa-edit','edit-icon');cov_nxy146syb().s[10]++;return editIcon;}// creating delete icon
function createDeleteIcon(){cov_nxy146syb().f[2]++;const deleteIcon=(cov_nxy146syb().s[11]++,document.createElement('i'));cov_nxy146syb().s[12]++;deleteIcon.classList.add('fas','fa-trash-alt','delete-icon');cov_nxy146syb().s[13]++;return deleteIcon;}// Update the showReviews function
function showReviews(restaurant){cov_nxy146syb().f[3]++;const restaurantId=(cov_nxy146syb().s[14]++,restaurant.restaurantId);// Check if the restaurantId is defined before making the fetch request
/* istanbul ignore next */if(restaurantId){// Fetch reviews data for the selected restaurant
fetch(`/viewReviewbyRestaurant/${restaurantId}`).then(response=>response.json()).then(reviews=>{const reviewsModalBody=document.getElementById('reviewsModalBody');reviewsModalBody.innerHTML='';// Clear existing content
// Check if 'reviews' is an array and has at least one review
if(Array.isArray(reviews)&&reviews.length>0){// Loop through the reviews and create HTML elements for each
reviews.forEach(review=>{const reviewContainer=document.createElement('div');reviewContainer.classList.add('review-container');// Create a div for the profile picture
const profilePicture=document.createElement('div');profilePicture.classList.add('profile-picture');// Create an image element for the blank avatar
const avatarImg=document.createElement('img');avatarImg.src='./images/blank.jpg';avatarImg.alt='Blank Avatar';profilePicture.appendChild(avatarImg);// Create a div for the review content
const reviewContent=document.createElement('div');reviewContent.classList.add('review-content');// Populate the review content with the review text
const reviewText=document.createElement('p');reviewText.textContent=review.reviewText;reviewContent.appendChild(reviewText);// Create a div for the email
const emailDiv=document.createElement('div');emailDiv.classList.add('email');emailDiv.textContent=review.email;// Create a div for the rating stars
const rating=parseInt(review.rating);const ratingStars=createRatingStars(rating);// Append the profile picture, review content, email, and rating stars to the review container
reviewContainer.appendChild(profilePicture);reviewContainer.appendChild(reviewContent);reviewContainer.appendChild(emailDiv);reviewContainer.appendChild(ratingStars);// Check if the user is logged in (check for the existence of 'user' in session storage)
// Check if the user is logged in
const loggedInUser=JSON.parse(localStorage.getItem('user'));// Check if the review was created by the logged-in user
if(loggedInUser&&loggedInUser.email===review.email){// User is logged in and the review belongs to them, show the "Edit" icon
const editIcon=createEditIcon();editIcon.addEventListener('click',()=>openUpdateReviewModal(review));// If user is logged in, show the "Delete" icon
const deleteIcon=createDeleteIcon();deleteIcon.addEventListener('click',()=>confirmAndDeleteReview({reviewId:review.reviewId,email:review.email}));// Create a container div for the icons
const iconsContainer=document.createElement('div');iconsContainer.classList.add('icons-container');// Append the icons to the container
iconsContainer.appendChild(editIcon);iconsContainer.appendChild(deleteIcon);// Append the container to the reviewContainer
reviewContainer.appendChild(iconsContainer);}// Append the review container to the reviews modal body
reviewsModalBody.appendChild(reviewContainer);});}// Show the reviews modal
$('#reviewsModal').modal('show');}).catch(error=>console.error('An error occurred:',error));}else{console.error('Invalid restaurant object: Missing restaurantId property');}}async function addReview(email,reviewText,rating){cov_nxy146syb().f[4]++;cov_nxy146syb().s[15]++;try{const restaurantId=(cov_nxy146syb().s[16]++,await getSelectedRestaurantId());// Add 'await' here
cov_nxy146syb().s[17]++;console.log('Posting the following data:');cov_nxy146syb().s[18]++;console.log('Email:',email);cov_nxy146syb().s[19]++;console.log('Review Text:',reviewText);cov_nxy146syb().s[20]++;console.log('Rating:',rating);cov_nxy146syb().s[21]++;console.log('Restaurant ID:',restaurantId);const response=(cov_nxy146syb().s[22]++,await fetch('/addReview',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,reviewText,rating,restaurantId})}));cov_nxy146syb().s[23]++;console.log('Server Response:',response);/* istanbul ignore next */if(response.ok){showReviews({restaurantId});// Review successfully added, reload the reviews for the selected restaurant
$('#addReviewModal').modal('hide');// Close the modal
}else{// Handle errors
console.error('Failed to add review:',response.statusText);}}catch(error){cov_nxy146syb().s[24]++;console.error('An error occurred:',error);}}async function getSelectedRestaurantId(){cov_nxy146syb().f[5]++;cov_nxy146syb().s[25]++;try{const response=(cov_nxy146syb().s[26]++,await fetch(`/viewRestaurantById/${selectedRestaurantId}`));const data=(cov_nxy146syb().s[27]++,await response.json());/* istanbul ignore next */if(response.ok){// Parse the restaurantId as an integer
const restaurantId=parseInt(data.restaurantId,10);console.log('Parsed Restaurant ID:',restaurantId);return restaurantId;}else{console.error('Failed to get selected restaurant ID:',data.message);return null;// Return null or handle the error accordingly
}}catch(error){cov_nxy146syb().s[28]++;console.error('An error occurred:',error);cov_nxy146syb().s[29]++;return null;// Return null or handle the error accordingly
}}async function updateReview(email,reviewId,reviewText,rating){cov_nxy146syb().f[6]++;cov_nxy146syb().s[30]++;try{const restaurantId=(cov_nxy146syb().s[31]++,await getSelectedRestaurantId());cov_nxy146syb().s[32]++;console.log('Updating review with the following data:');cov_nxy146syb().s[33]++;console.log('Email:',email);cov_nxy146syb().s[34]++;console.log('Review ID:',reviewId);cov_nxy146syb().s[35]++;console.log('Review Text:',reviewText);cov_nxy146syb().s[36]++;console.log('Rating:',rating);cov_nxy146syb().s[37]++;console.log('Restaurant ID:',restaurantId);const response=(cov_nxy146syb().s[38]++,await fetch('/updateReview',{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,reviewId,reviewText,rating,restaurantId})}));/* istanbul ignore next */if(response.ok){showReviews({restaurantId});$('#updateReviewModal').modal('hide');}else{console.error('Failed to update review:',response.statusText);}}catch(error){cov_nxy146syb().s[39]++;console.error('An error occurred:',error);}}function openUpdateReviewModal(review){cov_nxy146syb().f[7]++;// Assuming you have fields in the update review modal with IDs like 'updatedReviewText' and 'updatedRating'
const updatedReviewTextInput=(cov_nxy146syb().s[40]++,document.getElementById('updatedReviewText'));const updatedRatingInput=(cov_nxy146syb().s[41]++,document.getElementById('updatedRating'));// Populate the modal fields with the existing review details
cov_nxy146syb().s[42]++;updatedReviewTextInput.value=review.reviewText;cov_nxy146syb().s[43]++;updatedRatingInput.value=review.rating;// Store the review ID and email in data attributes of the modal
cov_nxy146syb().s[44]++;$('#updateReviewModal').data('reviewId',review.reviewId);cov_nxy146syb().s[45]++;$('#updateReviewModal').data('email',review.email);// Open the update review modal
cov_nxy146syb().s[46]++;$('#updateReviewModal').modal('show');}// function confirmAndDeleteReview({ reviewId, email }) {
//     // Show a confirmation dialog to the user
//     const isConfirmed = confirm("Are you sure you want to delete this review?");
//     if (isConfirmed) {
//         // If user confirms, you can make an API request to delete the review
//         // Replace the URL and method with your actual API endpoint and method (e.g., POST, DELETE)
//         fetch('/deleteReview', {
//             method: 'DELETE',
//             headers: {
//                 'Content-Type': 'application/json',
//             },
//             body: JSON.stringify({
//                 email,
//                 reviewId
//             }),
//         })
//         .then(response => {
//             if (response.ok) {
//                 // Review deleted successfully, you can update the UI or handle it as needed
//                 console.log('Review deleted successfully');
//                 // Update the UI by removing the deleted review element from the DOM
//                 const deletedReviewElement = document.getElementById(`review-${reviewId}`);
//                 if (deletedReviewElement) {
//                     deletedReviewElement.remove();
//                 }
//             } else {
//                 // Handle error response from the server
//                 console.error('Failed to delete review');
//             }window.location.reload();
//         })
//         .catch(error => {
//             // Handle network errors or other issues
//             console.error('Error deleting review:', error);
//         });
//     } else {
//         // User canceled the deletion
//         console.log('Deletion canceled');
//     }
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,